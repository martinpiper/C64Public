* Demo1: HardwareTest_VideoPattern0 really needs a APU reset disable
	Also mode7 init



* Demo4: .spritesPlane3 etc needs to use the newer macros for data sending




* Using the vectors layer
	Convert "Bad Apple" video, which is two colours, to RLE encoded screens
	Have black as transparent
		Add APU colour bars behind
	Frame compression could be:
		1 bit : Starting colour choice
		9 bits : RLE length
		0 = end of RLE for frame
		Then round up to the next byte obviously...
		C64 can decompress this into vector layer bytes quite quickly
	>> Using ImageToBitplane: --rgbshift 4 4 4 --newpalettes --forcergb 0 0 0 --paletteoffset 0 --palettesize 16 --image "C:\work\C64\Animation\RawFrames2\frm00001.bmp" --outputpalettes target/vectors_paletteData.bin --outputvectors 1 20 2 255 target/vectors_Data.bin --convertwritepass
	Probably will need to use cartridge video delta frame file layout to advance frames
	Add extra screen, like sprite animation, scrolling text screen etc
	Use vectors layer merged with something else for the current hardware... Once the combination board arrives
	
		
	
		




* Add 3D demo, move the code from the BDD6502 vector test
	>> Added @Demo12
	Identify code that would benefit from hardware acceleration
	Candidates are transformation, edge scanning
	* Done: 3D source in ../VectorPlotBitmap/ will need to be copied into the SDK release build
	* Add different model definitions, perhaps the letters for MEGAWANG?
	* Done: Add proper Vectors.a setup and macros using the setup from the scenario
	* Done: VectorPlot_drawSpansInternal needs to be extracted
	* Done: Add extra positition transform
	* Done: Add joystick control options:
		Fire = Stop auto rotation
		Fire+left = Do pos
		Fire+right = Do rot
		Fire+Up/down = Z pos
		Directions = pos/rot
	* Use the fast sort code, while reusing the index pointers from frame to frame, to sort the polygons?
		There is also an obvious optimisation here to use a BSP tree for polygon ordering if there is only one model, or models are not intersecting
	* Done: Add border configuration options: kVectorHardware_sideBarsSizeLeft and kVectorHardware_sideBarsColourRight
	* Wraparound the rot values correctly, not just clamp to 0, upper and lower bounds
	* Done: Consider colour offset for the "space ship" engines, since they are currently not visible with lighting enabled
		Optional lighting toggle?
			See: ; Colour bias
		Ah ha, it's because the engines are not separated from the rear ship faces. Adjust these.
			Find the rear ship faces by disabling them, then see how to remove their overdraw...
				Reorder the faces in the mesh or trace the engine edge properly...
					Note: "; Engines" and "; Rear plane"
						Note the small "triangle" engine segments flicker because of the backface cull bugging out on the "triangle"
					> Reordering "; Rear plane" to be last enables the engines to be seen. A lot easier than separating out the faces properly.
	* Done: Optimise face render function depending on backface cull and lighting options
	* Colour upper and lower bounds check config "cmp #$08" etc
		Needs lower and upper value config with current default if not set
	* Add option to increase vertical or horizontal resolution of the calculation
	* Increase accuracy of the 3D calculation, including screen edge clipping and near Z clipping
					




* HardwareTest_VideoInit needs APU stop
	Perhaps put into Video_DisableDisplay instead, since the APU is causing unstable video hardware init
		>> By running demo1 without any extra APU reset the hardware failed to start after DisableDisplay.
			However running the demo6 cartridge, then reseting the C64 on the "Loading" screen, which disables the APU
			This allowed an unmodified demo1 to execute correctly
	Or perhaps have an explicit Hardware_Init which does bus, audio, APU disable etc
		Then add this before every Video_DisableDisplay
	And also Video_InitDisplaySpritesScrollsBackground
	Update main4.a to remove extra APU disable code...
	Test the hardware still works after that...




* Update demo 1 and demo 4 for hardware
	Include music data decompress for demo 1
	Add turrican title/game music to demo 4




* Move HardwareTest_AudioInit out and create proper defines for the ebbs/address




* APU demo, possible to create entirely APU originated effects for raster bar logo colour gradient table movement animation and also screen scrolling



* Demo9
	* MCommonWorld_ViewPosZ is quite slow, it could do with just being in a lookup table. But there is a combination with World_ViewPosZ to consider
		Perhaps another set of lookup tables based on height and World_ViewPosZ?
	* Since cartridge is added, might as well add all the data initialisation into the cartridge as well. Like @Demo6C
	* Done: When going to the game, alter the sprite to display the score along the bottom of the screen
		DrawScoresSprites




* From very old dream
	Horizontally scrolling parallax landscape.
	Sky is halfway between day and sunset, rich golden red hues on the horizon.
	Clouds in background
	Desert sandstone coloured tall rock features, two layers
	Light white/grey coloured spaceship, squashed horizontal ovoid shape in two halves.
		https://www.google.com/search?q=tall+rocks+desert+sandstone&newwindow=1&rlz=1C1CHZL_enSG779SG779&sxsrf=ALiCzsb7I3AY0oLMfA2Oy1dFbrpJdpiJXw:1656857273966&source=lnms&tbm=isch&sa=X&ved=2ahUKEwioloiq8tz4AhWQ2HMBHfaEAc4Q_AUoAXoECAEQAw&biw=1280&bih=601&dpr=1.5
	
	
	


* Demo1 could use scaled sprites for the clouds, using the layer setup for Demo9
	This removes the need for the mode7 layer
	Would then need a separate mode7 demo




* Demo6: Using tiles and two chars layers, plus sprites, it should be possible to just about time the raster splits using the CPU instead of APU?
	This would make it possible to run the demo on the current built hardware
	Call it Demo6CPU
	It would be possible to have full trees, plus parallax background, plus full logos (or other trees layer behind the main trees)
		And of course the fence
	** Except that, doh, the background colour (which is a separate layer in the current demos) would need to be updated in the palettes used for each layer. *sigh*
		This is trickier than just updating the background colour... Hmph
	Done: Use the original resolution SotB logos, not the 256 horizontal squished versions
	
	



* https://www.spriters-resource.com/arcade/streetfighter2/sheet/117307/
	https://www.spriters-resource.com/arcade/streetfighter2/sheet/27200/




* main8.a created from main7.a to separate out the RaspberryPi example



* For all the raster waits, convert them into +MAPU_EmitWait
	Could also use a "raster screen edge" constant define



* Check the full user port design, that a bus reset and address setup sequence does not toggle the address write signal



* BatBall
	* Collisions with enemies make the ball bounce randomly, with a speed component
	* Different sprite shadow height (offset) can provide extra visual feeling of depth
	* Every N bounces the ball speed increases



* R-Type?
	https://www.youtube.com/watch?v=pVWtI0426mU
	https://www.spriters-resource.com/arcade/rtype/
	https://retrogamezone.co.uk/rtype.htm
	http://hol.abime.net/1288/gamemap
	Would need two tiles layers however

* Turrican?
	Clean files: https://github.com/Josef-Friedrich/turrican-clone-assets-collection/tree/master/turrican2
	The number of unique 16x16 tiles is quite large, more than 256
		cls && java -jar ..\..\..\ImageToBitplane\target\imagetobitplane-1.0-SNAPSHOT-jar-with-dependencies.jar --rgbshift 4 4 4 --newpalettes --forcergb 136 170 255 --paletteoffset 0 --palettesize 8 --startxy 0 0 --image "C:\temp\1-1 trim.png" --tilewh 16 16 --imagequantize 8 --outputplanes ../tmp/background_plane --outputscrcol ../tmp/map.bin --outputpalettes ../tmp/PaletteData.bin --numbitplanes 3 --convertwritepass
* Turrican: The tiles layer runs out of tiles with the background data as is. Perhaps try the background in the chars layer and check how many chars it uses?
	Then the score could be in the tiles layer instead? :D


* Metal slug?
	https://www.spriters-resource.com/arcade/ms6/sheet/123749/
	
	
* Darius?
	https://www.spriters-resource.com/fullview/114007/?source=genre
	
* Flying Shark
	Would need two sprite layers: https://www.spriters-resource.com/sharp_x68000/hishouzameflyingshark/sheet/134119/?source=genre
	



* Using convert2.bat the black pixels in "Top down.png" seem to be coming through with transparency. Perhaps this is a palette matching problem or where the loaded palette has black in colour 0??
	This would mean the layer combination logic is detecting a lower 3 bit pixel and treating it as transparent. The converter could do with a mode where that transparent pixel is ignored in the output palette.



* Unit test:
	AnimationEngine_MutateToType
	AnimationEngine_Delete
	CharacterLogic_CheckSpawn
	CharacterLogic_Update



* Intro for the hardware. Sound effects in stereo, zooming/scaling plane plus sprites and scrolling stars?
	https://modarchive.org/index.php?request=view_player&query=182799
	https://modarchive.org/index.php?request=view_player&query=158076
	https://modarchive.org/index.php?request=view_player&query=65855
	* https://modarchive.org/index.php?request=view_player&query=102831
	https://modarchive.org/index.php?request=view_player&query=67177
	https://modarchive.org/index.php?request=view_player&query=188620
	https://modarchive.org/index.php?request=view_player&query=67475
	https://modarchive.org/index.php?request=view_player&query=160307
	https://modarchive.org/index.php?request=view_player&query=67772
	Trimmed? https://modarchive.org/index.php?request=view_player&query=159149
	* https://modarchive.org/index.php?request=view_player&query=159249
	** https://modarchive.org/index.php?request=view_player&query=46133
	https://modarchive.org/index.php?request=view_player&query=118994
	* https://modarchive.org/index.php?request=view_player&query=119262
	https://modarchive.org/index.php?request=view_player&query=119263
	https://modarchive.org/index.php?request=view_player&query=54666
	https://modarchive.org/index.php?request=view_player&query=77231
	Note drop?
	Dubstep?
	https://www.youtube.com/watch?v=_lBY-zZksGw&list=WL&index=25&t=0s
	https://www.youtube.com/watch?v=vb97JWdn82w
	https://youtu.be/LyhU7qwGuFA?t=228
	https://youtu.be/LkDImfh9LaM?t=154
	https://www.youtube.com/watch?v=cf6S-uErp2M
	https://www.youtube.com/watch?v=ljEJOYA9gMg
		https://www.youtube.com/results?search_query=sound+effect+dramtic+whoosh+impact
	https://www.youtube.com/watch?v=tMO7WKTjZbM
		effect 3 and 9
	https://www.youtube.com/watch?v=DAN6fVzc7QY
	https://www.youtube.com/watch?v=9gvwhl505-o
		More bass
	https://www.youtube.com/watch?v=3g9eJRd0cXM&list=PLCHQYDMF4Ne-GZ9kel4cji1GJFwQzsbKi
	https://www.youtube.com/watch?v=qBnxz7PqS6c&list=PLCHQYDMF4Ne-GZ9kel4cji1GJFwQzsbKi&index=6
	Braams https://www.youtube.com/watch?v=ZWoY-iEwgIU
		https://www.youtube.com/watch?v=WniOZT7FlKM
	
	Editor https://batman.no/buze/
		C:\Program Files (x86)\Buze
	C:\Users\Martin Piper\Downloads\ft2-clone-v1.34-win64\ft2-clone-win64
		https://16-bits.org/ft2.php
			<Space> for edit mode!
