!zn
; Sprite emit macros, customised for this application allow the ImageToBitplane tool to output optimised sprite drawing
; A = Y pos
; X = X pos
; Y = Preserved
EmitSpriteFrame_temp	!by 0
EmitSpriteFrame_count	!by 0
EmitSpriteFrame_flips	!by 0
!macro MEmitSpriteFrame frame,palette {
	pha
	sta StackedSpriteData+2,y
	txa
	sta StackedSpriteData+3,y
	lda #frame
	sta StackedSpriteData,y
	lda #palette
	ora EmitSpriteFrame_flips
	sta StackedSpriteData+1,y
	iny
	iny
	iny
	iny
	pla
}
!macro MEmitSpriteFrame_Preserve {
	sty EmitSpriteFrame_temp
	ldy EmitSpriteFrame_count
}
!macro MEmitSpriteFrame_RestoreExit {
	sty EmitSpriteFrame_count
	ldy EmitSpriteFrame_temp
	rts
}

!source "tmp/spriteSheet.txt.a"

!macro MAnimationType_Create ~.kAnimationTypeEnum , .address {
	.kAnimationTypeEnum = * - AnimationType_tableLoHi
	!by <.address , >.address
}

!macro MAnimationType_End {
	!by 0
}


!zn
copySprites
	jsr Video_SetAddressSprites
!for .i , kBus24Bit_SpritesMaxNum * 4 {
	lda StackedSpriteData + .i - 1
	sta CIA2PortBRS232
}
	rts

StackedSpriteData
	!fill kBus24Bit_SpritesMaxNum * 4
