!zn
GamePlayerLives !by 2

!ifdef BuildTitleScreen {
GameDemoExitTime !by 0
}

!zn
InitGame
	jsr Bus20To32Bit1_Init

!ifdef BuildTitleScreen {
	+MByteValueToAddress_A GameDemoExitTimeValue , GameDemoExitTime
}
	+MByteValueToAddress_A landscapeHeightsMax , landscapeHeightsFrame
	+MByteValueToAddress_A 1 , EntityEnableRenderPlayerSpecialCase
	+MByteValueToAddress_A 0 , PlayerControl_disableRoll
	+MByteValueToAddress_A 0 , landscapeRotationsFrameRoll
	+MByteValueToAddress_A 0 , playerXPositionOffset
!ifdef Debug_GameStartZeroSpeed {
	+MByteValueToAddress_A 0 , landscapeFrameSpeed
} else {
	+MByteValueToAddress_A 3 , landscapeFrameSpeed
	jsr PlayerSpeedHasChangedNotify
}

	+MByteValueToAddress_A -75 , Player_EngineVolumeChange

!ifdef BuildTitleScreen {
	; This causes the game demo sequence to "appear" to start midway through a game
	+MByteValueToAddress_A 50 , Video_WaitVBlank_FramesPassed
} else {
	jsr StageNumber_Increase
}

	jsr ScoreHandler_Init
	lda #0
!for .i , GameTotalHits_size {
	sta GameTotalHits+.i-1
}
	jsr GameShowScreen

	rts

GameScore_ValueToChar	!bin "..\tmp\Demo14TitleChars_map.bin",10,32
GameScore_Value_screenPos = (36 * kBus24Bit_CharScreenWidth) + 76

GameShowScreen
	; Do not show the game screen if the title screen demo is being shown
!ifndef BuildTitleScreen {
	jsr Video_SetAddressCharScrollRegisters
	+MBus24Bit_SendLE16BitValue 512
	+MBus24Bit_SendLE16BitValue 256
}

	rts


RunGame
mainLoop2
	jsr Video_WaitVBlank
	jsr Video_StartRasterTimers
	; Must happen in the VBlank
	jsr VBlankUpdatePaletteColours
	jsr VBlankUpdateHorizon
	jsr VBlankUpdateScore
	jsr VBlankUpdateText

!ifdef BuildTitleScreen {
	; This specific place ensures the horizon update matches what sprites have been submitted before the screen pause...
	dec GameDemoExitTime
	bne .notTimeYet
	; Back to the title screen
	rts
.notTimeYet
}

	; Can happen outside the VBlank
	jsr UpdateText_Poll_PerFrame
	jsr ProcessSamplePlayTriggers

	+MFrameCompensate_30fps_Before ~.frameCompensate1 , .frameCompensate1o

	jsr Music_CheckTime
	jsr UpdateText_Poll
	jsr PlayerControl
	jsr PlayerSpeedNormaliseCheck
	jsr UpdateLandscapeFrame
	jsr EntityUpdateObjects
!ifndef Debug_NoSpawnEnemy {
	jsr CheckSpawnEnemyFormation
	bcc .noRandomSpawn
	jsr CheckSpawnEnemy
.noRandomSpawn
}
	jsr LandscapeAnimate

	+MFrameCompensate_30fps_After  .frameCompensate1 , ~.frameCompensate1o

	jsr EntitySort
	jsr Game_TestLockReticleWithEntities

	jsr RenderSpritesGame

!ifndef Debug_SimpleLandscapeRotation {
	lda #kLandscapeMapRowsData_flags_doLanding
	bit LandscapeFlags
	bne .gameToLanding
	lda #kLandscapeMapRowsData_flags_doCanyon
	bit LandscapeFlags
	bne .gameToCanyon
	lda #kLandscapeMapRowsData_flags_doRefueling
	bit LandscapeFlags
	bne .gameToRefueling
	; Checks for an edge in this flag
	lda #kLandscapeMapRowsData_flags_doStage
	bit LandscapeFlags
	beq .noStageIncrease
	lda #kLandscapeMapRowsData_flags_doStage
	bit .previousLandscapeFlags
	bne .noStageIncrease
	jsr StageNumber_Increase
.noStageIncrease
	lda LandscapeFlags
	sta .previousLandscapeFlags

!ifndef BuildTitleScreen {
	lda GamePaletteBank
	bne .notOKBank
	lda StageNumberByte
	cmp #GameCompleteStageNumber
	bcs .gameToComplete
.notOKBank
}
}

!ifdef BuildTitleScreen {
	lda CIA1KeyboardColumnJoystickA
	and #JoystickBits_Fire
	+lbeq TitleScreen_RunGame
}

	jmp mainLoop2
.previousLandscapeFlags !by 0

.gameToLanding
	jsr InitGameLanding
	jsr RunGameLanding

.restoreSpeed
	+MByteValueToAddress_A 3 , landscapeFrameSpeed
	jsr PlayerSpeedHasChangedNotify
	+MByteValueToAddress_A 50 , Player_EngineVolumeChange
	+MWordValueToAddress_A kSampleInfo11_frequency , Player_EngineTargetFrequency

	jmp mainLoop2

.gameToCanyon
	jsr InitGameCanyon
	jsr RunGameCanyon
	jmp mainLoop2

.gameToRefueling
	jsr InitGameRefueling
	jsr RunGameRefueling
	jmp .restoreSpeed

!ifndef BuildTitleScreen {
.gameToComplete
	jsr InitGameComplete
	jsr RunGameComplete
	jmp mainLoop_backToTitleScreen
}


RenderSpritesGame
	jsr StartSprites4Render

!if 0 {
	; A deliberate large corrupted sprite to show sprite extents
	; Palette
	+MBus24Bit_Send8BitValue kVarsEmitSpriteFrame_t_678_0_0_0_colour
	; Y pos and size
	+MBus24Bit_Send8BitValue 0
	+MBus24Bit_Send8BitValue $40
	; X pos and size
	+MBus24Bit_Send8BitValue 0
	+MBus24Bit_Send8BitValue $40
	; Address
	+MBus24Bit_SendLE24BitValue 0
	; Inv scales
	+MBus24Bit_Send8BitValue $91
	+MBus24Bit_Send8BitValue $91
	; Stride
	+MBus24Bit_Send8BitValue 33
}
	jsr Game_RenderLockReticles
	jsr RadarDisplayRenderSpritesDirectMode
	jsr SpeedDisplayRenderSpritesDirectMode
!ifdef BuildTitleScreen {
	jsr RenderHand
}
	jsr EntityRenderSpritesDirectMode
	jsr RenderTimeout
	jsr TerminateScaledSpritesList
	jsr Exit32BitModeAndSignalReady

	jsr StartSprites4Render2
	jsr LandscapeRender
	jsr RenderTimeout2
	jsr TerminateScaledSpritesList
	jsr Exit32BitModeAndSignalReady2

	rts

