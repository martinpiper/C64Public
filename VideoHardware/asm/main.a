;main test code
kBus24Bit_VideoLayer_HasOverscan=1
kBus24Bit_VideoLayer_ExpandedPalettes = 1
kBus24Bit_SpritesMaxNum = 32

!source "stdlib/stdlib.a"
!source "stdlib/LongBranches.a"
!source "BombJack/stdlib/Bus24Bit_Macros.a"
!source "BombJack/stdlib/Video_Macros.a"
!source "BombJack/stdlib/APU_Macros.a"


!to "bin/main.prg", cbm
!sal
!sl "tmp/main.map"
!svl "tmp/main.lbl"
!pdb "tmp/main.pdb"
!cpu 6510
!ct pet

; Save space for zeroPageCode_realStart
zeroPage_Temp0	= $10
zeroPage_Temp1	= $11

; Enable this to test using the extra mode7 layers code
; This will need "smoke test.feature" to enable the extra mode7 layers at 0xa800 and 0xb000
; Also disable the output image checks, since the expected output graphics won't match
; Also use assets\convert2.bat
;Mode7LayersEnable = 1

; Define this to include graphics data and not include music
;IncludeGraphicsData = 1

!zn
*=$200
	jmp start
	
!source "tmp/FingerPrint.a"

Initialise_NoMACROWaitForTheLastScan = 1
Initialise_NoIRQServiceRoutine = 1
!source "stdlib/Initialise.a"
!source "BombJack/stdlib/Bus24Bit.a"
!source "BombJack/stdlib/Video.a"
!source "BombJack/stdlib/HardwareTest.a"
!source "BombJack/stdlib/Music.a"
!source "BombJack/stdlib/APU.a"

!zn
start
	sei
	lda #ProcessorPortAllRAMWithIO
	jsr InitialiseMachine
	jsr Bus24Bit_Init
	jsr APU_ResetDisable

!ifdef IncludeGraphicsData {
	jsr HardwareTest_VideoPattern0
;	+WaitForFire_A
}

	jsr Bus24Bit_Init
	jsr Video_DisableDisplay
	jsr Video_InitDisplaySpritesScrollsBackground

	jsr Video_SetAddressVideoPriorityRegister
	+MBus24Bit_VideoLayer_EmitPriority_NearToFar_A kBus24Bit_VideoLayer_Priority_Chars , kBus24Bit_VideoLayer_Priority_Mode7 , kBus24Bit_VideoLayer_Priority_Sprites , kBus24Bit_VideoLayer_Priority_Tiles


!ifndef Mode7LayersEnable {
	jsr MusicInit
}
	jsr AnimationEngine_Init
	jsr AllocatePlayer

	; Do various video data init here
!ifdef IncludeGraphicsData {
	jsr InitGraphicsMemory
}
	jsr Video_SetAddressTileBackgroundRegister
;	lda #255
	; The status panel currently uses the first palette, so the first map (tiles background) palette entry is 16
	lda #16
	sta CIA2PortBRS232

	jsr Video_SetAddressVideoOverscanExtentRegisters
	lda #kBus24Bit_VideoLayer_OverscanExtent_Wide
	sta CIA2PortBRS232

	lda #kVideo_EnableDisplay_Enable
	jsr Video_EnableDisplay

	jsr Video_WaitVBlank

mainLoop
.l1
	jsr setupFrame
	inc VIC2BorderColour
	jmp .l1

setupFrame
	jsr Video_WaitVBlank
	jsr copyMode7Regs
	jsr copyTilesScrolls
	jsr copySprites
!ifndef Mode7LayersEnable {
!ifndef IncludeGraphicsData {
	jsr MusicPoll
}
}
	jsr HandleJoystick
	jsr TileScreen_calculateFine
	jsr AnimationEngine_Update
	jsr CharacterLogic_Update
	; Potentially can do this less often if time is tight
	jsr CharacterLogic_CheckSpawn
	jsr Mode7_Update
	jsr AnimationEngine_RenderSprites

	rts

!source "../BerzerkRedux/Rand.a"
!source "asm/TileScreen.a"
!source "asm/AnimationEngine.a"
!source "asm/PlayerInput.a"
!source "asm/Mode7.a"
!source "asm/StackedSprites.a"
!source "tmp/spriteSheet.txt.a"
!source "asm/AnimationData.a"
!source "asm/CharacterLogic.a"
!source "asm/CharacterLogicData.a"

MusicDataStart
MusicDataStart_afterHeader = MusicDataStart + 4
!ifndef IncludeGraphicsData {
	!bin "tmp/target/exportedMusicEvents.cmp"
}
MusicDataEnd

!ifdef IncludeGraphicsData {
RNXPCompressionDecompress_WriteBytesmAddr = zeroPage_Temp0
!source "asm/DecompressRLECommon.a"

!zn
InitGraphicsMemory
	lda #1
	+MWordValueTo_XY $9c00
	jsr Bus24Bit_SetAddressBus

	+MWordValueTo_AX .palette
	ldy #0
	jsr Bus24Bit_CopySmallData
	jsr Bus24Bit_CopySmallDataAgain
	inc VIC2BorderColour

	; Maps
	+MRLEScreenDataToDefaultTileScreen .tilesMap
	+MRLEScreenDataToDefaultCharScreen .charsMap , .charsMap2

	; Chars
	+MRLEPlanesDataToDefaultCharScreen .plane0 , .plane1 , .plane2 , .plane3

	; Sprites
	+MRLEPlanesDataToDefaultSprite .spritesPlane0 , .spritesPlane1 , .spritesPlane2 , .spritesPlane3

	; Tiles
	+MRLEPlanesDataToDefaultTileScreen .tilesPlane0 , .tilesPlane1 , .tilesPlane2 , .tilesPlane3

	; Mode7
	+MRLEScreenDataToDefaultMode7Screen .mode7Screen
	+MRLEPlanesDataToDefaultMode7Screen .mode7Plane0 , .mode7Plane1

	rts
; All
.palette
	!bin "tmp/PaletteData.bin"; to 24bit bus at '0x9c00' and addressEx '0x01'
	!fill $200,0

.spritesPlane0
	!bin "tmp/sprite_plane0.cmp"; to 24bit bus at '0x2000' and addressEx '0x10'
.spritesPlane1
	!bin "tmp/sprite_plane1.cmp"; to 24bit bus at '0x4000' and addressEx '0x10'
.spritesPlane2
	!bin "tmp/sprite_plane2.cmp"; to 24bit bus at '0x8000' and addressEx '0x10'
.spritesPlane3
	!bin "tmp/sprite_plane3.cmp"; to 24bit bus at '0x0000' and addressEx '0x10'

.tilesPlane0
	!bin "tmp/background_plane0.cmp"; to 24bit bus at '0x2000' and addressEx '0x40'
.tilesPlane1
	!bin "tmp/background_plane1.cmp"; to 24bit bus at '0x4000' and addressEx '0x40'
.tilesPlane2
	!bin "tmp/background_plane2.cmp"; to 24bit bus at '0x8000' and addressEx '0x40'
.tilesPlane3
	!bin "tmp/background_plane3.cmp"; to 24bit bus at '0x0000' and addressEx '0x40'

.plane0
	!bin "tmp/status_plane0.cmp"; to 24bit bus at '0x2000' and addressEx '0x20'
.plane1
	!bin "tmp/status_plane1.cmp"; to 24bit bus at '0x4000' and addressEx '0x20'
.plane2
	!bin "tmp/status_plane2.cmp"; to 24bit bus at '0x8000' and addressEx '0x20'
.plane3
	!bin "tmp/status_plane3.cmp"; to 24bit bus at '0x0000' and addressEx '0x20'

.charsMap
	!bin "tmp/status_map.cmp"; to 24bit bus at '0x4000' and addressEx '0x80'
.charsMap2
	!bin "tmp/status_map.cmp2"; to 24bit bus at '0x8000' and addressEx '0x80'
.tilesMap
	!bin "tmp/map.cmp"; to 24bit bus at '0x2000' and addressEx '0x80'


.mode7Plane0
    !bin "tmp/clouds_tiles.cmp"
.mode7Plane1
    !bin "tmp/clouds_tiles.cmp2"
.mode7Screen
    !bin "tmp/clouds_screen.cmp"

}


EndMainMemory
+MCheckNotInIOKernal
