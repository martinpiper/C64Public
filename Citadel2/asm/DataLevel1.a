!to "DataLevel1.prg", cbm
!sal
!sl "DataLevel1.map"
!svl "DataLevel1.lbl"


!source "../stdlib/stdlib.a"
!source "asm/DataDefs.a"
!source "asm/MazeSolveDefs.a"
!source "DataAutoDefsScorePanel.a"


* = LevelDataStart

!align 255,0
BlockData
!bin "Level1.ctm" , numMapUsedTiles*4*4 ,  $14 + (numMapUsedChars * 9) , 2

;!align 255,0
BlockColours

!ifdef CharColoursForEveryCharacter {
CharColours
!bin "Level1.ctm" , numMapUsedChars , $14 + (numMapUsedChars * 8)
}


;!align 255,0
MapData
!by MazeWidth,MazeHeight
MapDataTiles
!bin "Level1.ctm" , (MazeWidth*MazeHeight) ,  $14 + (numMapUsedChars * 9) + (numMapUsedTiles*4*4 * 2) , 2
MapDataEnd


NumInterestingPlaces !by calcedNumPlaces
; A list of interesting coordinates to route to
InterestingPlacesX
!by 2,		4
!by	1,		4
!by 1,		8,		10,		1,		6
!by 19,		23,		23,		19
!by 21,		25,		14,		31,		27,		18,		22,		28,		26,		24,		24,		13,		20
!by 30,		34,		30,		38,		36,		33,		38
calcedNumPlaces = * - InterestingPlacesX
!if calcedNumPlaces > MaxInterestingPlaces { !error "MaxInterestingPlaces overrun" }

; Padding
!fill MaxInterestingPlaces - (* - InterestingPlacesX),0

InterestingPlacesY
!by 5,		5
!by 12,		10
!by 23,		20,		23,		21,		21
!by 19,		19,		23,		23
!by 1,		3,		1,		2,		2,		7,		8,		7,		8,		8,		10,		11,		8
!by 14,		14,		21,		18,		10,		11,		3
; Padding
!fill MaxInterestingPlaces - (* - InterestingPlacesY),0

InterestingPlacesZone !fill MaxInterestingPlaces , 0xff

MapTutorialHintNum !by calcedMapTutorialHintNum
MapTutorialHintAddr +MLittleEndian16Bit MapTutorialHint


; Holds the coordinates of terminals, their related doors and the door type
; Structure:
;	Terminal X	When MapTerminalToDoor_EndList then it is the end of the list
;	Terminal Y
;	Door X
;	Door Y
;	Tile index closed
;	Tile index open
;	MapAnim close
;	MapAnim open
;	MapAnim switch off
;	MapAnim switch on
;	Zone index 1
;	Zone index 2
MapTerminalToDoor
	!by 1 , 1 ,			4 , 8 ,		MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_TerminalOffFacingDown , MapAnim_TerminalOnFacingDown,		-1 , -1
	!by 1 , 7 ,			4 , 14 ,	MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_TerminalOffFacingDown , MapAnim_TerminalOnFacingDown,		-1 , -1
	!by 3 , 11 ,		5 , 13 ,	MapTile_VerticalDoor ,		MapTile_VerticalOpenDoor	, MapAnim_VerticalDoorClose		, MapAnim_VerticalOpenDoor ,		MapAnim_DoorSwitchOffFacingDown , MapAnim_DoorSwitchOnFacingDown,	-1 , -1

	!by 6 , 24 ,		6 , 22 ,	MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_DoorSwitchOffFacingUp , MapAnim_DoorSwitchOnFacingUp,		-1 , -1

	; Both doors
	!by 14 , 0 ,		20 , 2 ,	MapTile_VerticalDoor ,		MapTile_VerticalOpenDoor	, MapAnim_VerticalDoorClose		, MapAnim_VerticalOpenDoor ,		MapAnim_TerminalOffFacingDown , MapAnim_TerminalOnFacingDown,		-1 , -1
	!by 14 , 0 ,		26 , 2 ,	MapTile_VerticalDoor ,		MapTile_VerticalOpenDoor	, MapAnim_VerticalDoorClose		, MapAnim_VerticalOpenDoor ,		-1 , -1,		-1 , -1

	!by 28 , 6 ,		30 , 17 ,	MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_TerminalOffFacingDown , MapAnim_TerminalOnFacingDown,		-1 , -1
	!by 30 , 19 ,		26 , 9 ,	MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_DoorSwitchOffFacingUp , MapAnim_DoorSwitchOnFacingUp,		-1 , -1
	!by 26 , 11 ,		34 , 17 ,	MapTile_HorizontalDoor ,	MapTile_HorizontalOpenDoor	, MapAnim_HorizontalDoorClose	, MapAnim_HorizontalOpenDoor ,		MapAnim_DoorSwitchOffFacingUp , MapAnim_DoorSwitchOnFacingUp,		-1 , -1

	; Both doors
	!by 34 , 20 ,		23 , 8 ,	MapTile_VerticalDoor ,		MapTile_VerticalOpenDoor	, MapAnim_VerticalDoorClose		, MapAnim_VerticalOpenDoor ,		MapAnim_DoorSwitchOffFacingUp , MapAnim_DoorSwitchOnFacingUp,		-1 , -1
	!by 34 , 20 ,		25 , 8 ,	MapTile_VerticalDoor ,		MapTile_VerticalOpenDoor	, MapAnim_VerticalDoorClose		, MapAnim_VerticalOpenDoor ,		-1 , -1,		-1 , -1

	; End of doors
	!by MapTerminalToDoor_EndList

; Some padding
!fill MapTerminalToDoor_Size * 8 , 0


; Holds the doors that the enemies can open by being near
; Door X
; Door Y
; Hot spot 1 X
; Hot spot 1 Y
; Hot spot 2 X
; Hot spot 2 Y
; Open map anim
; Closed map anim
; Detect block type to detect from Node_isBlocked_Player , Node_isBlocked_Enemy
; Reset delay counter until close
; Counter until close
MapAutoDoor
	!by 1 , 11 ,			1 , 10 ,		1 , 12 ,		MapAnim_HorizontalOpenDoor , MapAnim_HorizontalAutoDoorClose2 ,		Node_isBlocked_Player , 5 , 0		; Player only door
	!by 4 , 11 ,			4 , 10 ,		4 , 12 ,		MapAnim_HorizontalOpenDoor , MapAnim_HorizontalAutoDoorClose2 ,		Node_isBlocked_Player , 5 , 0

	!by 2 , 21 ,			1 , 21 ,		3 , 21 ,		MapAnim_VerticalOpenDoor , MapAnim_VertialAutoDoorClose ,			Node_isBlocked_Enemy , 5 , 0		; Enemy only door
	!by 11 , 23 ,			10 , 23 ,		12 , 23 ,		MapAnim_VerticalOpenDoor , MapAnim_VertialAutoDoorClose ,			Node_isBlocked_Enemy , 5 , 0		; Enemy only door

	!by 38 , 4 ,			38 , 3 ,		38 , 5 ,		MapAnim_HorizontalOpenDoor , MapAnim_HorizontalAutoDoorClose2 ,		Node_isBlocked_Enemy , 5 , 0		; Enemy only door

	; End of auto doors
	!by MapAutoDoor_EndList

; Some padding
!fill MapAutoDoor_Size * 8 , 0


; Teleporters are usually defined in pairs, for the teleport and then the returning teleport.
; It's possible to define a one way teleport using this mechanism.
TeleportPairs
	!by 38 , 1 ,		-1 , -1		; End level

	!by 1 , 15 ,		1 , 23		; To location
	!by 1 , 23 ,		1 , 15

	!by 12 , 21 ,		13 , 11
	!by 13 , 11 ,		12 , 21

	!by 12 , 23 ,		21 , 21
	!by 21 , 21 ,		12 , 23

	!by 22 , 6 ,		30 , 14
	!by 30 , 14 ,		22 , 6

	!by 26 , 6 ,		34 , 14
	!by 34 , 14 ,		26 , 6

	!by 24 , 10 ,		32 , 18
	!by 32 , 18 ,		24 , 10

	!by 23 , 19 ,		33 , 11
	!by 33 , 11 ,		23 , 19

	!by -1

; Some padding
!fill 4 * 8 , 0

; The enemy types that can be spawned from generators in this level in this order
; Must be EnemyTemplate_MaxSpawnList in size
EnemyTemplate_SpawnList
	!by 1 , 2 , 3 , 4 , 5 , 3 , 2 , 1
	!by 5 , 3 , 2 , 1 , 1 , 2 , 3 , 4
	!by 1 , 2 , 3 , 4 , 5 , 3 , 5 , 5
;	!by 5,5,5,5,5,5,5,5		; If enabled, tests that this type of enemy is much more frequent
;	!by 5,5,5,5,5,5,5,5		; If enabled, tests that this type of enemy is much more frequent
;	!by 5,5,5,5,5,5,5,5		; If enabled, tests that this type of enemy is much more frequent
!if (* - EnemyTemplate_SpawnList) != EnemyTemplate_MaxSpawnList { !error "EnemyTemplate_SpawnList size != EnemyTemplate_MaxSpawnList" }


; The enemy animation flags that be spawned from generators in this level in this order
; Must be EnemyFlags_MaxSpawnList in size
EnemyFlags_SpawnList
	!by EnemyFlags_DropPickup , EnemyFlags_DropPickup , 0 , 0 , EnemyFlags_DropPickup , 0 , 0 , 0 , EnemyFlags_DropPickup , 0
	!by 0 , 0 , 0 , 0 , EnemyFlags_DropPickup , 0 , 0 , 0 , 0 , 0
	!by 0 , 0 , 0 , EnemyFlags_DropPickup , 0 , 0 , 0 , 0 , 0 , 0
!if (* - EnemyFlags_SpawnList) != EnemyFlags_MaxSpawnList { !error "EnemyFlags_SpawnList size != EnemyFlags_MaxSpawnList" }

; Enemy templates
; Zeroth type is the player
EnemyTemplate_Animation
	!by	5,	0,	1,	2,	3,	15,	0,	0
EnemyTemplate_Speed
	!by	-1,	0,	1,	2,	3,	-1,	0,	0
EnemyTemplate_Health
	!by	-1,	0,	1,	2,	0,	1,	0,	0
; The lower the number the more alert the enemy is for .playerAgression and will start chasing the player instead
EnemyTemplate_Alertness
	!by	-1,	10,	20,	30,	0,	-1,	0,	0
EnemyTemplate_Ram
	!by	0,	0,	0,	0,	1,	0,	0,	0
EnemyTemplate_CaptureEnergyCost
	!by	-1,	3,	2,	2,	2,	3,	2,	2
EnemyTemplate_FireSpeed
	!by	-1,	180,	100,	30,	100,	120,	100,	110


; The index into the Enemy structures is shifted by -1 because 0 is used as a clear index flag for AnimationActiveSlot
; A negative flag cannot be used because we want potentially >128 enemies in the DB

; Negative type indicates invalid enemy type, hence an unused slot
; The first entry is the player animation. It gets updated by HandleUserInput instead of EnemyThink
EnemyType
	!by 0	; Player!
	!by 1
;	!by 2
!if 1 {
	!by 2 , 3
	!by 4 , 5
	!by 5
	!by 4 , 4
	!by 1
	!by 1 , 2 , 3 , 4
	!by 5 , 5
}

	!fill numMaxEnemySlotsToOnScreenCheck - (*-EnemyType),-1	; Fill the rest with nothing

; Anything in these flags gets copied into AnimationEnemyFlags when it is allocated
EnemyFlags
	!by 0	; Player!

	!by EnemyFlags_DropPickup
;	!by 0
	!by 0 , 0
	!by 0 , EnemyFlags_DropPickup
	!by 0
	!by EnemyFlags_DropPickup , EnemyFlags_DropPickup
	!by 0
	!by 0 , 0 , 0 , 0
	!by 0 , 0

	!fill numMaxEnemySlotsToOnScreenCheck - (*-EnemyFlags),0	; Fill the rest with nothing

; Map tile positions
EnemyPositionsX
	!by 8	; Default start position
;	!by 1	; Teleport
;	!by 10	; Beside door to the trap room
;	!by 12	; Teleport to the trap room
;	!by 38

	!by 1
;	!by 1
	!by 1 , 4
	!by 1 , 8
	!by 17
	!by 24 ,24
	!by 26
	!by 30 , 36 , 36 , 38
	!by 22 , 23

	!fill numMaxEnemySlotsToOnScreenCheck - (*-EnemyPositionsX),-1	; Fill the rest with nothing

EnemyPositionsY
	!by 3
;	!by 23
;	!by 23
;	!by 23
;	!by 7

	!by 5
;	!by 5
	!by 12 , 10
	!by 21 , 20
	!by 11
	!by 8 , 9
	!by 7
	!by 22 , 18 , 10 , 5
	!by 19 , 20

	!fill numMaxEnemySlotsToOnScreenCheck - (*-EnemyPositionsY),-1	; Fill the rest with nothing


; Fixed number of animation slots
AnimationTypeTableLo
!by <AnimationData_0 , <AnimationData_1 , <AnimationData_2 , <AnimationData_3 , <AnimationData_4 , <AnimationData_5 , <AnimationData_6 , <AnimationData_7
!by <AnimationData_8 , <AnimationData_9 , <AnimationData_10, <AnimationData_11, <AnimationData_12, <AnimationData_13, <AnimationData_14, <AnimationData_15
!by <AnimationData_16 , <AnimationData_17 , <AnimationData_18, <AnimationData_19 , <AnimationData_20 , <AnimationData_21
AnimationTypeTableHi
!by >AnimationData_0 , >AnimationData_1 , >AnimationData_2 , >AnimationData_3 , >AnimationData_4 , >AnimationData_5 , >AnimationData_6 , >AnimationData_7
!by >AnimationData_8 , >AnimationData_9 , >AnimationData_10, >AnimationData_11, >AnimationData_12, >AnimationData_13, >AnimationData_14, >AnimationData_15
!by >AnimationData_16 , >AnimationData_17 , >AnimationData_18, >AnimationData_19 , >AnimationData_20 , >AnimationData_21

MapAnimationTypeTableLo
!by <MapAnimationData_0 , <MapAnimationData_1 , <MapAnimationData_2 , <MapAnimationData_3 , <MapAnimationData_4 , <MapAnimationData_5 , <MapAnimationData_6 , <MapAnimationData_7
!by <MapAnimationData_8 , <MapAnimationData_9 , <MapAnimationData_10, <MapAnimationData_11, <MapAnimationData_12, <MapAnimationData_13, <MapAnimationData_14, <MapAnimationData_15
!by <MapAnimationData_16
MapAnimationTypeTableHi
!by >MapAnimationData_0 , >MapAnimationData_1 , >MapAnimationData_2 , >MapAnimationData_3 , >MapAnimationData_4 , >MapAnimationData_5 , >MapAnimationData_6 , >MapAnimationData_7
!by >MapAnimationData_8 , >MapAnimationData_9 , >MapAnimationData_10, >MapAnimationData_11, >MapAnimationData_12, >MapAnimationData_13, >MapAnimationData_14, >MapAnimationData_15
!by >MapAnimationData_16


; Data after this point can be dynamic in length and referenced by updates to previous tables

AnimationData_0		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Brown , 17 , 2
!by 44 , 45 , 46 , 47 ,48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60

AnimationData_1		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_LightBlue , 26 , 1
!by 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77
!by 76 , 75 , 74 , 73 , 72 , 71 , 70 , 69 , 68 , 67 , 66 , 65 , 64

AnimationData_2		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Red , 2 , 2
!by 61 , 62

AnimationData_3		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_LightGrey , 12 , 2
!by 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43

; Big explosion
AnimationData_4		+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_InheritColour , 0 , 13 , 2
!by 7 , 8 , 9 , 10 , 11 , 12 , 13 , 6 , 5 , 4 , 3 , 2 , 1

; Player animation
AnimationData_5		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_LightRed , 10 , 1
!by 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31

AnimationData_6		+MakeAnimation AnimationFlags_Cycle | AnimationFlags_InheritColour | AnimationFlags_CharCollide | AnimationFlags_PlayerCollideS , 0 , 4 , 2
!by 86 , 95 , 96 , 95

; In game pickup animation
AnimationData_7		+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_PlayerCollideL | AnimationFlags_Pickup | AnimationFlags_InheritColour , VIC2Colour_LightBlue , 3*16 , 2
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99
!by 97 , 98 , 99

; Sub-game door
AnimationData_8		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_LightBlue , 1 , 2
!by 100

; Small explosion
AnimationData_9		+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_InheritColour , 0 , 8 , 2
!by 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85

; Used for bigger explosions where we want to use alternate frame flickering
; Big explosion, alternate blanked
AnimationData_10		+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_InheritColour , 0 , 25 , 1
!by 7 , 186 , 8 , 186 , 9 , 186 , 10 , 186 , 11 , 186 , 12 , 186 , 13 , 186 , 6 , 186 , 5 , 186 , 4 , 186 , 3 , 186 , 2 , 186 , 1
; Small explosion, alternate blanked out of sync with animation 10
AnimationData_11		+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_InheritColour , 0 , 16 , 1
!by 186 , 78 , 186 , 79 , 186 , 80 , 186 , 81 , 186 , 82 , 186 , 83 , 186 , 84 , 186 , 85
; Big explosion, end frame stays blank to stop the animation player slot from being used by enemies
AnimationData_12		+MakeAnimation AnimationFlags_InheritColour , 0 , 14 , 2
!by 7 , 8 , 9 , 10 , 11 , 12 , 13 , 6 , 5 , 4 , 3 , 2 , 1 , 186

; Persistent pickup animation, not used in the game but in the sub-game
AnimationData_13		+MakeAnimation AnimationFlags_Cycle | AnimationFlags_InheritColour , VIC2Colour_LightBlue , 3 , 2
!by 97 , 98 , 99

; Sub-game exit
AnimationData_14		+MakeAnimation AnimationFlags_Cycle , VIC2Colour_LightBlue , 1 , 2
!by 101

; Static enemy
AnimationData_15	+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Green , 8 , 3
!by 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21

; Other pickups
AnimationData_16	+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_PlayerCollideL | AnimationFlags_Pickup , VIC2Colour_Black , 1 , 3*16*2
!by 103
AnimationData_17	+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Black , 1 , 127
!by 103

AnimationData_18	+MakeAnimation AnimationFlags_DeleteAtEnd | AnimationFlags_PlayerCollideL | AnimationFlags_Pickup , VIC2Colour_Grey , 1 , 3*16*2
!by 102
AnimationData_19	+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Grey , 1 , 127
!by 102

; Capture probe
AnimationData_20	+MakeAnimation AnimationFlags_Cycle , VIC2Colour_Grey , 1 , 127
!by 104

; Capture probe blink
AnimationData_21	+MakeAnimation AnimationFlags_None , VIC2Colour_Grey , 9 , 15
!by 104 , 186 , 104 , 186 , 104 , 186 , 104 , 186 , 104

; List of map tiles followed by a negative number to signify the end of the list
; Open enemy generator frames for this map
MapAnimationData_0
	!by MapTile_GeneratorOpening1,	MapTile_GeneratorOpening1,	MapTile_GeneratorOpening1,	MapTile_GeneratorOpening1,	MapTile_GeneratorOpening2,	MapTile_GeneratorOpening2,	MapTile_GeneratorOpening2,	MapTile_GeneratorOpening2,	MapTile_GeneratorOpening3,	MapTile_GeneratorOpening3,	MapTile_GeneratorOpening3,	MapTile_GeneratorOpening3,	MapTile_GeneratorOpen1,	MapTile_GeneratorOpen1,	MapTile_GeneratorOpen1,	MapTile_GeneratorOpen1, -1

; Horizontal auto door open
MapAnimationData_1
	!by MapTile_HorizontalOpenDoor , MapTile_HorizontalOpenDoor , MapTile_HorizontalOpenDoor , MapTile_HorizontalOpenDoor , -1

; Horizontal auto door close
MapAnimationData_2
	!by MapTile_HorizontalAutoDoor , MapTile_HorizontalAutoDoor , MapTile_HorizontalAutoDoor , MapTile_HorizontalAutoDoor , -1

; Vertical auto door open
MapAnimationData_3
	!by MapTile_VerticalOpenDoor , MapTile_VerticalOpenDoor , MapTile_VerticalOpenDoor , MapTile_VerticalOpenDoor , -1

; Vertical auto door close
MapAnimationData_4
	!by MapTile_VerticalAutoDoor , MapTile_VerticalAutoDoor , MapTile_VerticalAutoDoor , MapTile_VerticalAutoDoor , -1

; Horizontal auto door 2 close
MapAnimationData_5
	!by MapTile_HorizontalAutoDoor2 , MapTile_HorizontalAutoDoor2 , MapTile_HorizontalAutoDoor2 , MapTile_HorizontalAutoDoor2 , -1

; Vertical auto door 2 close
MapAnimationData_6
	!by MapTile_VerticalAutoDoor2 , MapTile_VerticalAutoDoor2 , MapTile_VerticalAutoDoor2 , MapTile_VerticalAutoDoor2 , -1

; Horizontal door close
MapAnimationData_7
	!by MapTile_HorizontalDoor , MapTile_HorizontalDoor , MapTile_HorizontalDoor , MapTile_HorizontalDoor , -1

; Vertical door close
MapAnimationData_8
	!by MapTile_VerticalDoor , MapTile_VerticalDoor , MapTile_VerticalDoor , MapTile_VerticalDoor , -1


; Switches off/on facing down/up
MapAnimationData_9
	!by MapTile_DoorSwitchOffFacingDown , MapTile_DoorSwitchOffFacingDown , MapTile_DoorSwitchOffFacingDown , MapTile_DoorSwitchOffFacingDown , -1

MapAnimationData_10
	!by MapTile_DoorSwitchOffFacingUp , MapTile_DoorSwitchOffFacingUp , MapTile_DoorSwitchOffFacingUp , MapTile_DoorSwitchOffFacingUp , -1

MapAnimationData_11
	!by MapTile_DoorSwitchOnFacingDown , MapTile_DoorSwitchOnFacingDown , MapTile_DoorSwitchOnFacingDown , MapTile_DoorSwitchOnFacingDown , -1

MapAnimationData_12
	!by MapTile_DoorSwitchOnFacingUp , MapTile_DoorSwitchOnFacingUp , MapTile_DoorSwitchOnFacingUp , MapTile_DoorSwitchOnFacingUp , -1

; Terminals off/on facing down/up
MapAnimationData_13
	!by MapTile_ComputerTerminalOffFacingDown , MapTile_ComputerTerminalOffFacingDown , MapTile_ComputerTerminalOffFacingDown , MapTile_ComputerTerminalOffFacingDown , -1

MapAnimationData_14
	!by MapTile_ComputerTerminalOffFacingUp , MapTile_ComputerTerminalOffFacingUp , MapTile_ComputerTerminalOffFacingUp , MapTile_ComputerTerminalOffFacingUp , -1

MapAnimationData_15
	!by MapTile_ComputerTerminalOnFacingDown , MapTile_ComputerTerminalOnFacingDown , MapTile_ComputerTerminalOnFacingDown , MapTile_ComputerTerminalOnFacingDown , -1

MapAnimationData_16
	!by MapTile_ComputerTerminalOnFacingUp , MapTile_ComputerTerminalOnFacingUp , MapTile_ComputerTerminalOnFacingUp , MapTile_ComputerTerminalOnFacingUp , -1


; Other dynamic data, like map hints
; Bit field for the below to the consider for their current state. MSB = Delete once satisfied. If = 0 then skip entirely.
; The hint text to display if the current state is correct
; == EnemyPositionsX (with EnemyPositionsXLo check)
; == EnemyPositionsY (with EnemyPositionsYLo check)
; == CaptureProbe_RunningProbe
; == CaptureProbe_CapturedListCount
MapTutorialHint
	!by MapTutorialHint_ToCheck_Delete | MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_RunningProbe
	+MLittleEndian16Bit MapTutorialHint_StartTheCapture
	!by 6 , 6
	!by -1
	!by 0
	!by 0,0,0

	!by MapTutorialHint_ToCheck_Delete | MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_CapturedListCount
	+MLittleEndian16Bit MapTutorialHint_CaptureTheEnemy1
	!by 6 , 6
	!by 0
	!by 0
	!by 0,0,0

	!by MapTutorialHint_ToCheck_Delete | MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_CapturedListCount
	+MLittleEndian16Bit MapTutorialHint_CommandCaptured
	!by 6 , 5
	!by 0
	!by 1
	!by 0,0,0

	!by MapTutorialHint_ToCheck_Delete | MapTutorialHint_ToCheck_CapturedListCount | MapTutorialHint_ToCheck_SetTime
	+MLittleEndian16Bit MapTutorialHint_CommandCapturedCycle
	!by 0 , 0
	!by 0
	!by 2
	!by 0,0,0

	!by MapTutorialHint_ToCheck_Delete | MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_ForcePosition
	+MLittleEndian16Bit MapTutorialHint_ChargingStation
	!by 4 , 5
	!by 0
	!by 0
	!by 0,0,0

	!by MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_AddrForValue | MapTutorialHint_ToCheck_ForcePosition
	+MLittleEndian16Bit MapTutorialHint_Terminal
	!by 1 , 2
	!by 0
	!by 0
	+MLittleEndian16Bit MapDataTiles + 4 + (8 * MazeWidth)
	!by MapTile_HorizontalDoor

	!by MapTutorialHint_ToCheck_MapX | MapTutorialHint_ToCheck_MapY | MapTutorialHint_ToCheck_AddrForValue | MapTutorialHint_ToCheck_ForcePosition
	+MLittleEndian16Bit MapTutorialHint_DoorLocked
	!by 4 , 7
	!by 0
	!by 0
	+MLittleEndian16Bit MapDataTiles + 4 + (8 * MazeWidth)
	!by MapTile_HorizontalDoor

calcedMapTutorialHintNum = (* - MapTutorialHint) / MapTutorialHint_Size



LevelDataEnd = *
LevelData_Size = LevelDataEnd - LevelDataStart

!if LevelDataEnd >= MusicPlayerInit { !error "LevelDataEnd must not impact MusicPlayerInit" }

; The music data is part of the extra level data. This allows the music to be changed each level.

* = MusicPlayerInit
!bin "Sound\Citadel2_Level1_SFX.prg",,$2
MusicPlayerEndData = *

!if * >= $a000 { !error "Music data end must not impact MarkBeginData at $a000" }
