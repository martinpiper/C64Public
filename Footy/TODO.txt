; TODO

* Option for how many players per side before the game starts




* Option for two or more human players on the same team, or opposing teams
	User port extender for joysticks?





* When holding down fire while running without the ball, to control the ball once the player moves into it, the power stays at minimum.
	Only when controlling the ball does the power increase.
	This allows the player to get into a rhythm of timing the release after controlling the ball for a good shot power




* Properly limit AI running players count, based on those actually moving, to preserve frame time



* Controlling player arrow could do with indicating where the player is off screen. For example point up, down, left, or right depending on where the player is off screen
	The signs from "Player_Multiplex_YPosHi + .i" and "Multiplex_XPosHi + .i + 1" can be used



; TODO: Needs stop animation choice, preserve the last good "joystick" input from the AI



* When attacking, move the target positions towards the opposition goal based on the ball position




* Players that are on the left hand edge of the pitch do not kick the ball to the left, same for the right edge
	Instead they aim for a point above or below the ball until they are on the opposite side, then move vertically onto the ball
	



* Players when they have the ball try to find the other player with the most space
	Players away from the goal have an increasing space adjustment value
	This will tend to make players pass to a player with space towards the goal




* When near the goal, shoot towards the goal



* Use compressed sample player for voiceover, commentators, crowd noises etc. Should be possible to get that working while scrolling.




* When choosing the closest player to control, don't swap too often,have a countdown that doesn't allow a swap again for a short time.
	Kicking the ball, or bumping into it, resets the timer allowing the next nearest player to be chosen.
	This timer only starts when a new player is switched to.




* For more than 8 sprites limit, multiplexor flags when a sprite is drawn, or when it is skipped, and the next frame will flicker to the other sprite.
	Basically the game will remove for one frame a previously drawn sprite from the first not drawn sprite during the copy and before the sort.




* When not controlling the ball, a fire button quick tap with a direction will start a tackle slide in that direction.




* When not controlling the ball, a fire button quick tap without a direction will start a jump.
	While jumping a direction input will push the ball in that direction and very slowly move the player in that direction.

