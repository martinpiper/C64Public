!zn {
!ifdef Decompression_OptimiseNoStoreStub { } else {
	; The old code for a normal boring RLE, the same format used by "Compression.exe -cr"
RNXPCompressionDecompressRLE_InitStore
	stx RNXPCompressionDecompress_WriteBytesmAddr+0
	sty RNXPCompressionDecompress_WriteBytesmAddr+1
	rts
}

RNXPCompressionDecompressRLE
!ifdef Decompression_OptimiseNoStoreStub { } else {
	stx RNXPCompressionDecompress_GetByte+1
	sty RNXPCompressionDecompress_GetByte+2
}

	jsr RNXPCompressionDecompress_GetByte
	clc
	adc RNXPCompressionDecompress_WriteBytesmAddr+0
	sta .smEndTestL+1
	jsr RNXPCompressionDecompress_GetByte
	adc RNXPCompressionDecompress_WriteBytesmAddr+1
	sta .smEndTestH+1

	jsr RNXPCompressionDecompress_GetByte
	sta .smRLEByte+1

.rle1
	jsr RNXPCompressionDecompress_GetByte
.smRLEByte	cmp #00
	beq .rle3
	jsr RNXPCompressionDecompress_WriteByte
	jmp .rle1
	; Handle a run
.rle3
	lda RNXPCompressionDecompress_WriteBytesmAddr+0
.smEndTestL	cmp #00
	bne .rle2
	lda RNXPCompressionDecompress_WriteBytesmAddr+1
.smEndTestH	cmp #00
	bne .rle2
!ifdef RNXPCompressionDecompress_ExitCodeDefined {
	+RNXPCompressionDecompress_ExitCode
} else {
	rts
}
.rle2
	+RNXPCompressionIncBorder_A
	jsr RNXPCompressionDecompress_GetByte
	tax
	jsr RNXPCompressionDecompress_GetByte
.rle4
	jsr RNXPCompressionDecompress_WriteByte
	dex
	bne .rle4
	jmp .rle1
}
