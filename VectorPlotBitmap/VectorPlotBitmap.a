;VectorPlotBitmap test code
!source "../stdlib/stdlib.a"
!source "../stdlib/LongBranches.a"
!to "VectorPlotBitmap.prg", cbm
!sal
!sl "VectorPlotBitmap.map"
!svl "VectorPlotBitmap.lbl"
!pdb "VectorPlotBitmap.pdb"
!cpu 6510
!ct pet
!initmem 0

SpanTable_IsInCart	= 1
SpanPlot_MaskEnds	= 1
;EnableInterlace		= 1

kSpanCalc_backgroundColour = 0
kPoly2D_vertexBufferInZP = 1

!ifdef SpanTable_IsInCart {
CartSelectBank_ProcessorPort	= ProcessorPortDefault
CartKillBank_ProcessorPort		= ProcessorPortKERNALWithIO
} else {
CartSelectBank_ProcessorPort	= ProcessorPortAllRAMWithIO
CartKillBank_ProcessorPort		= ProcessorPortAllRAMWithIO
}

Bitmap0Memory = $2000
;Bitmap1Memory = $6000

ZPBitmap_VarBase			= $02
!source "BitmapPlotVars.a"
ZPSegments_VarBase	= ZPBitmap_endVars
!source "SegmentsVars.a"
ZPPoly2D_VarBase	= ZPSegments_endVars
!source "Poly2DVars.a"
ZPTransform_VarBase	= ZPPoly2D_endVars
!source "TransformVars.a"

!ifdef SpanTable_IsInCart {
!source "../MakeCart/asm/EasyFlash_Macros.a"
;!source "../MakeCart/asm/GMod2_Macros.a"
}

!source "BitmapPlotMacros.a"
!source "SegmentsMacros.a"
!source "SpanCalcMacros.a"
!source "Poly2DMacros.a"
!source "TransformMacros.a"

* = $800
!source "../stdlib/Initialise.a"
!source "FingerPrint.a"
!ifdef SpanTable_IsInCart {
!source "../MakeCart/asm/BankSelect8K.a"
} else {
CartSelectBank_8K_NoSEI
CartKillBank
	rts
}


* = $4000
	lda #CartSelectBank_ProcessorPort
	jsr InitialiseMachine
	jsr CartKillBank

	lda #%111011
	sta VIC2ScreenControlV
	lda #VIC2ScreenControlHDefault | %10000
	sta VIC2ScreenControlH

	+MVIC2MemorySetup_ScreenBitmap_A SCREENRAM , Bitmap0Memory
	sta VIC2MemorySetup

	+ClearScreenAt_AX COLOURRAM , VIC2Colour_White

	+ClearScreenAt_AX SCREENRAM , VIC2Colour_Grey | (VIC2Colour_DarkGrey << 4)

	lda #>Bitmap0Memory
	ldy #%10000100
	jsr BitmapPlot_clear

	lda #>Bitmap_paletteStart
	sta ZPBitmap_PaletteHi

	jsr Transform_Init
	lda #0
	jsr Transform_loadMesh
.l1
	jsr CartKillBank
	jsr Segments_initStorage
	ldx #0
	ldy #kSpanPlot_maxHeight
	jsr Segments_initListHeaders

	dec .expireCount
	bne .noExpire
	lda #2
	sta .expireCount
;	jsr SpanCalc_expireCleared
.noExpire
;	jsr SpanCalc_dirtyClear

	; Test the render pipeline routines
	inc .drawTestIndex

!if 1 {
	; Setup 2D coords
	dec .sm1+1
.sm1	lda #50
	and #127
	sta Poly2D_vertexBufferX
	lda #0
	sta Poly2D_vertexBufferY

	lda #128
	sta Poly2D_vertexBufferX+1
	lda #32
	sta Poly2D_vertexBufferY+1

	lda #90
	sta Poly2D_vertexBufferX+2
	lda #64
	sta Poly2D_vertexBufferY+2

	jsr Poly2D_scanTriangle

	lda .drawTestIndex
	lsr
	lsr
	and #%111
;	lda #1	; Fixed colour for debug purposes
	jsr Segments_processLines


	; Setup 2D coords
	inc .sm2+1
	inc .sm2+1
.sm2	lda #50
	and #127
	sta Poly2D_vertexBufferX
	lda #30
	sta Poly2D_vertexBufferY

	lda #150
	sta Poly2D_vertexBufferX+1
	lda #40
	sta Poly2D_vertexBufferY+1

	lda #0
	sta Poly2D_vertexBufferX+2
	lda #90
	sta Poly2D_vertexBufferY+2

	jsr Poly2D_scanTriangle

	lda .drawTestIndex
	lsr
	lsr
	clc
	adc #1
	and #%111
;	lda #2	; Fixed colour for debug purposes
	jsr Segments_processLines


	; Setup 2D coords
	lda #0
	sta Poly2D_vertexBufferX
	lda #90
	sta Poly2D_vertexBufferY

	lda #120
	sta Poly2D_vertexBufferX+1
	lda #130
	sta Poly2D_vertexBufferY+1

	dec .sm3+1
.sm3	lda #90
	and #63
	sta Poly2D_vertexBufferX+2
	lda #160
	sta Poly2D_vertexBufferY+2

	jsr Poly2D_scanTriangle

	lda .drawTestIndex
	lsr
	lsr
	clc
	adc #2
	and #%111
;	lda #3	; Fixed colour for debug purposes
	jsr Segments_processLines
}

	jsr Transform_calcRotation
	jsr Transform_transformProjectVerts
	jsr Transform_renderFaces

	inc ZPTransform_rotX
	inc ZPTransform_rotX
	inc ZPTransform_rotX
	inc ZPTransform_rotY
	inc ZPTransform_rotY
	inc ZPTransform_rotZ


	lda #0
	jsr CartSelectBank_8K_NoSEI

	; Draw bitmap
	+MWordValueToAddress_A Bitmap0Memory , ZPBitmap_CurrentPos
	inc VIC2BorderColour

	jsr BitmapPlot_drawSpans

	dec .modelSwap
	bpl .noSwap
	lda #64
	sta .modelSwap
	lda .smModel+1
	eor #1
	sta .smModel+1
.smModel lda #0
	jsr Transform_loadMesh
.noSwap

;	+WaitForFire_A

	jmp .l1

.modelSwap !by 64
.expireCount !by 2
.drawTestIndex !by 0

!source "BitmapPlot.a"
!source "SegmentsMemory.a"
!source "Segments.a"
!source "Poly2D.a"
!source "Poly2DMem.a"
!source "Transform.a"
!source "TransformMem.a"
!source "TransformTables.a"
!source "3DModels.a"

!ifdef SpanTable_IsInCart {

!source "_f_index1.a"
!ifndef CartFile1_Bank_SpanDraw_p0_0_bin {
	CartFile1_Bank_SpanDraw_p0_0_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p0_1_bin {
	CartFile1_Bank_SpanDraw_p0_1_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p0_2_bin {
	CartFile1_Bank_SpanDraw_p0_2_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p1_0_bin {
	CartFile1_Bank_SpanDraw_p1_0_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p1_1_bin {
	CartFile1_Bank_SpanDraw_p1_1_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p1_2_bin {
	CartFile1_Bank_SpanDraw_p1_2_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p2_0_bin {
	CartFile1_Bank_SpanDraw_p2_0_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p2_1_bin {
	CartFile1_Bank_SpanDraw_p2_1_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p2_2_bin {
	CartFile1_Bank_SpanDraw_p2_2_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p3_0_bin {
	CartFile1_Bank_SpanDraw_p3_0_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p3_1_bin {
	CartFile1_Bank_SpanDraw_p3_1_bin = 0
}
!ifndef CartFile1_Bank_SpanDraw_p3_2_bin {
	CartFile1_Bank_SpanDraw_p3_2_bin = 0
}

SpanBanks_p0
	!fill SpanConfigSize_0 , CartFile1_Bank_SpanDraw_p0_0_bin
	!fill SpanConfigSize_1 , CartFile1_Bank_SpanDraw_p0_1_bin
	!fill SpanConfigSize_2 , CartFile1_Bank_SpanDraw_p0_2_bin
SpanBanks_p1
	!fill SpanConfigSize_0 , CartFile1_Bank_SpanDraw_p1_0_bin
	!fill SpanConfigSize_1 , CartFile1_Bank_SpanDraw_p1_1_bin
	!fill SpanConfigSize_2 , CartFile1_Bank_SpanDraw_p1_2_bin
SpanBanks_p2
	!fill SpanConfigSize_0 , CartFile1_Bank_SpanDraw_p2_0_bin
	!fill SpanConfigSize_1 , CartFile1_Bank_SpanDraw_p2_1_bin
	!fill SpanConfigSize_2 , CartFile1_Bank_SpanDraw_p2_2_bin
SpanBanks_p3
	!fill SpanConfigSize_0 , CartFile1_Bank_SpanDraw_p3_0_bin
	!fill SpanConfigSize_1 , CartFile1_Bank_SpanDraw_p3_1_bin
	!fill SpanConfigSize_2 , CartFile1_Bank_SpanDraw_p3_2_bin
} else {
SpanBanks_p0
SpanBanks_p1
SpanBanks_p2
SpanBanks_p3
}


!ifdef SpanTable_IsInCart {
!source "SpanTableInCart.a"
} else {
!source "SpanTable.a"
}
