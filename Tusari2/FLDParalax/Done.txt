* FLD Parallax mainline timing to use CIA2+NMI instead
	Added IRQ_Bottom, FLDSize* DoWaitRasterForcePlus_A
	NMI_FLDSize1, NMI_FLDSize2, NMI_FLDSize2b


; MPi: TODO: This could use the calculated ideal raster position for the test. There are other exampels of this MACROWaitForRasterChange_A usage too

; NMI_FLDSize4_Timing_Lo etc are all the same delays, consolidate

* +DoFLD
	Instead of counting changing in rasters, it can just be the end target raster line
	This should make it easier to split 1 raster line instead of the minimum being 2
	* Did a quick test, while it works just about, the timings involved to avoid 0xff artifacts around the bad line timing is tight



* FLD parallax
	* For large movement ranges, optionally stop processing subsequent NMIs by turning off the timer. This can be a table of enable values for the lower NMIs
	* Variable speed, from slow to fast. Re-order the horizontal movement calculation so that the foreground moves one pixel per frame and the rest move slower than that.
		This is just a simple counter update routine, so very quick and short. It completes before the NMI/IRQ for the next frame starts
		When a character scroll is needed is can signal the required scroll for later processing chasing the scan fown the next frame.
		Then call that routine several times per frame for faster movement, up to sa planned 8 pixels per frame for the foreground.


* Unroll MProcessCharLine MProcessCharLineColour
