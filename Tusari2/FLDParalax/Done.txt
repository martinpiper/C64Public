* FLD Parallax mainline timing to use CIA2+NMI instead
	Added IRQ_Bottom, FLDSize* DoWaitRasterForcePlus_A
	NMI_FLDSize1, NMI_FLDSize2, NMI_FLDSize2b


; MPi: TODO: This could use the calculated ideal raster position for the test. There are other exampels of this MACROWaitForRasterChange_A usage too

; NMI_FLDSize4_Timing_Lo etc are all the same delays, consolidate

* +DoFLD
	Instead of counting changing in rasters, it can just be the end target raster line
	This should make it easier to split 1 raster line instead of the minimum being 2
	* Did a quick test, while it works just about, the timings involved to avoid 0xff artifacts around the bad line timing is tight



* FLD parallax
	* For large movement ranges, optionally stop processing subsequent NMIs by turning off the timer. This can be a table of enable values for the lower NMIs
	* Variable speed, from slow to fast. Re-order the horizontal movement calculation so that the foreground moves one pixel per frame and the rest move slower than that.
		This is just a simple counter update routine, so very quick and short. It completes before the NMI/IRQ for the next frame starts
		When a character scroll is needed is can signal the required scroll for later processing chasing the scan fown the next frame.
		Then call that routine several times per frame for faster movement, up to sa planned 8 pixels per frame for the foreground.


* Unroll MProcessCharLine MProcessCharLineColour




* FLD parallax
	* Nahh: Add multiplexor, sprite sort just after VBLank and just after the vertical FLD time calculation and the horizontal scroll calc
	* Nahh: JoystickBits_Left JoystickBits_Right acceleration
	* Done: Player face left or right depending on motion
	* Done: Crystals etc to move with scroll direction
	* Done: Ghosts to avoid
	* Done: Ghosts decrease energy
	* Done: Energy display using last border sprite
		>> PlayerHealth
	* Done: Player death
	* Done: Title screen, use many sprites to display hiscores/instructions
		TitleScreenCharset 2x1
		>> .titlel1
		>> TitleScreenInitSprites
		>> TitleScreenText1
	* Done: Bullets?
		BulletSprite_XPos * 2 for 20 entries
		PlayerBullet_Fire PlayerBullet_Update kMaxAvailableBulletYPosIndex
		>> ; Bullet collision detection
	* Done: Smart bomb? Uses all bullets?
		>> PlayerSmartBombs
	* Done: Border is now open so shift the top cloud sprites up, giving more room for bullets
	* Done: Sound effects
		>> +MPlaySFX placeholders
		> See data build in: C:\Work\C64\Citadel2\Sound\buildSound.bat
	* Nahh: Collectables for weapons?
		Rapid fire
		Extra shots
		Backwards shot
	* Nahh: UpdateHiresChars and UpdateHiresCharsNeg take a long time
		During the faster scrolls they can be called twice, so an optimised routine that shifts twice might help
		pha/pla might also be a factor
	>> PlayerCollisionDetection takes around 8-12 lines
	>> PlayerBullet_Update takes around 2-3 lines
	* Done: Add credits, calculate text slowly into the sprite data using the 2x1 font
		Maybe expand and scroll the hires sprites?
	* Done: Player explosion animation, using the random number generator. Just overwrite the player sprite frames with explosion animations randomly chosen.
	* Done: Title screen *reduce* WantFLD to 0 instead of setting it
	* Player bullets do not update while the smartbomb is active
		This avoids the bullet hanging around on the left hand edge of the screen problem
	* Slowly move the exploding player sprites apart
	* When the player (head?) is over the mountains bottom split there seems to be a higher chance of the screen glitching on real (old) hardware
		With rapid fire?
			DebugAutoRapidFire
		Sprites_Y = $72
			>> +SetSpriteXYColFrame 0 , VIC2SpriteXBorderRight , $72 , VIC2Colour_LightRed , $ca
		Happens even when stationary in the middle of the screen
		Not very often
		33 seconds: "C:\Users\marti\Videos\Captures\VICE_ C64 (x64sc) at 99% speed, 50 fps 2025-05-02 11-42-23.mp4"
		Seems to be starting from below the mountains
		>> Also happening without rapid fire
		>> Reliable reproduction on real hardware, use:
			+SetSpriteXYColFrame 0 , VIC2SpriteXBorderRight , $72 , VIC2Colour_LightRed , $ca
			>> Reliable fix: kFirstAvailableBulletYPos = 67
			>> Now it's not reliably reproducing with the old code... Aiyoh.
		>> Reliable reproduction in emulation, for assemble/build:
			Hold fire and left. Just before frame 628 there is a flicker
			>> Comment out: bne .notLeft
				And: +TestForPortBitsLoop_A CIA1KeyboardColumnJoystickA , JoystickBits_Fire , .titlel1
				Happens on frame 640! Even with the fingerprint code enabled.
			>> kFirstAvailableBulletYPos = 66 seems to fix the reproducible issue
				>> But enabling "bne .notLeft" caused glitches again if I hold left. sigh.
					Adding two nop with the commented out code causes glitches on later frames...
					>> Hmm code position related? !align 255,0 for the next function doesn't seem to change anything, nor with extra nop
				>> DebugGlitchTest
				>> This seems to fix it: kFirstAvailableBulletYPos = 67
	* Made it easier to shoot the ghosts, bigger vertical bounding box.
	* Ghosts that spawn on the left should move right... Otherwise the player can just sit stationary and rapidly fire to the right.
		Using Sprites_XDiv2 to check for the middle of the screen works, but because the player to enemy collision only updates this after a successful Y test the ghosts don't always have the correct value
		This causes a delay in the ghost changing direction, which actually loks good. So no need to fix this.
	* The Y spawn position seems to be limited to the top half of the game area?
		Observed in the glitch testing... "C:\Users\marti\Videos\Captures\VICE_ C64 (x64sc) at 99% speed, 50 fps 2025-05-02 11-42-23.mp4"
		Needs to be between "VIC2SpriteYBorderTop + (4*8) + 2" and "VIC2SpriteYBorderBottom - VIC2SpriteSizeY - 6"
			>> $54 and $df
			= $8b
	* Add level intermission
		Each level has a goal of how many crystals to collect and enemies to destroy
		Then there can be a short intermission between levels, with suitable sound effects
		Display, with sprites and the 2x1 font, "level nnn"
		Can be up to three digits?
			>> Just added text instead :)
		Then start the player in the middle of the screen

