* C:\Downloads\WinVICE-3.1-x86-r34062\WinVICE-3.1-x86-r34062\x64sc.exe -remotemonitor %cd%\Scroller.crt
* For editing the levels: C:\work\c64\ExternalTools\CharPad Free Edition 2.7.2\CharPad.exe
* For editing enemy placement: C:\Users\Martin Piper\Downloads\tiled-windows-64bit-snapshot\tiled.exe
* For editing the score panel: C:\Work\C64\ExternalTools\CharPad 2.0 310715\CharPad.exe
* C:\work\c64\ExternalTools\SpritePad v2b1\SpritePad.exe


* ; Will also need to handle more SFX channels with music off... See Citadel2 code that also uses MusicPlayerStop
	And AnimationStopMusic SFX_Voices SFX_VoiceLowerReset SFX_VoiceUpperWrap
	Also need to handle the music conversion better: MusicAndSFX_TusariLevel1.prg
		Need some obvious effects linked it to test the build pipeline for using the export command line arguments
		See: C:\Work\C64\Citadel2\Sound\buildSound.bat




* "; Kill the char effect" to common macro code



* Late jump, for a few frames after starting to fall, allow a jump.




* Boss PoC
	Added boss sprites and map placement
	Need some simple AI
		Jump with leg animation
		Throw rock




* Sword, press space to switch?
	Short range slash - Sprite
	High damage
	Covers +/- 45 degrees from the joystick 8-way direction
	Blocks (parry) all damage from the area covered while slashing
	Upgrade with slightly longer range multiple sword effect?
	Done: For simple collision detection can emit animated chars, like the daggers, which will also cause damage to enemies
		These do not need to be deleted on collision to enable them to kill other enemies... Ignore "; Kill the char effect" and CharEffectsTime write
	The last sword swipe direction can be stored to help push the player away from hit enemies
	>> Added sprite simple animation for .swordRight and .swordLeft
	Done: * Need to move the sword frames up and down depending on the animation frame



* Daggers, starts with one, upgrade to 2 then 3 then directional 8-way spread shot +/ 45 degrees?




* Optionally unroll Scroller_ScrollSprites




* Full screen mode will need to tweak the sprite Y position screen edge detection to allow some top edge wraparound
	Tusari2\Animation.a Animation_UpdateTick
		Scroller_DiscardMinSpriteYPos


; TODO: If one fails to allocate then abort the creation
	Also if carry is returned during the init then perhaps don't clear the map trigger value?



* Some assert macros would be nice, would help find bugs earlier
	Can be disabled by defining a value
	To jump (jsr) to a standard screen, perhaps with optional message?
		The jsr can be used to read the message text
			Look for: .error and +MDebugBreak usage



* Hidden power-up block, turns into standable block when shot
	Releases power-ups



* Collectable coins/crystals?



* For the init and tick (AnimationTypes_tickLo etc) here is a possible optimisation where the type is multiplied by 3 and a linear block of memory consisting of "jmp $1234" is created instead
	Making it very quick to index into the array and call the function, especially if aligned to a page boundary.
	The test needs to update the scroller mapH/L/pixel scroll values using the correct internal routine from the Scroller source



* ; TODO: This stops the in-game music. Normally this would be a choice from the title screen code
