!zn
	+StartAnim ~AnimationFrames_MainCharTorsoStandLeft , 1
	+DoFrame 153
	+StartAnim ~AnimationFrames_MainCharLegsStandLeft , 1
	+DoFrame 155

	+StartAnim ~AnimationFrames_MainCharTorsoStandRight , 1
	+DoFrame 182
	+StartAnim ~AnimationFrames_MainCharLegsStandRight , 1
	+DoFrame 184

	+StartAnim ~AnimationFrames_MainCharTorsoLeft , 2
	+DoFrame 131 , 132 , 133 , 134 , 135 , 136 , 137 , 138 , 137 , 136 , 135 , 134 , 133 , 132
	+StartAnim ~AnimationFrames_MainCharLegsLeft , 2
	+DoFrame 139 , 140 , 141 , 142 , 143 , 144 , 145 , 146 , 147 , 148 , 149 , 150 , 151 , 152

	+StartAnim ~AnimationFrames_MainCharTorsoRight , 2
	+DoFrame $a0 , $a1 , $a2 , $a3 , $a4 , $a5 , $a6 , $a7 , $a6 , $a5 , $a4 , $a3 , $a2 , $a1
	+StartAnim ~AnimationFrames_MainCharLegsRight , 2
	+DoFrame $a8 , $a9 , $aa , $ab , $ac , $ad , $ae , $af , $b0 , $b1 , $b2 , $b3 , $b4 , $b5


	+StartAnim ~AnimationFrames_MainCharSwordSwipeLeft , 3
!for .i , 1 {
	+DoFrame 211 , 212 , 213
}
	+EndAnimDelete
	+StartAnim ~AnimationFrames_MainCharSwordSwipeRight , 3
!for .i , 1 {
	+DoFrame 235 , 236 , 237
}
	+EndAnimDelete

	+StartAnim ~AnimationFrames_Bat , 6
	+DoFrame $5b , $5c , $5d , $5e , $5f , $60

	+StartAnim ~AnimationFrames_Explosion , 8
	+DoFrame $42 , $43 , $44 , $45 , $46 , $47 , $48
	+EndAnimDelete

	+StartAnim ~AnimationFrames_Worm , 5
	+DoFrame $49 , $4a , $4b , $4c , $4d , $4e , $4f , $50


	+StartAnim ~AnimationFrames_practice , 1
	+DoFrame 231

	+StartAnim ~AnimationFrames_DragonBody , 50
	+DoFrame 227 , 229
	+StartAnim ~AnimationFrames_DragonHead , 50
	+DoFrame 226 , 228

	+StartAnim ~AnimationFrames_fireball , 1
	+DoFrame 230

	+StartAnim ~AnimationFrames_spider , 50
	+DoFrame 188 , 189 , 64

	+StartAnim ~AnimationFrames_chest , 1
	+DoFrame 65

	+StartAnim ~AnimationFrames_worm , 10
	+DoFrame 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80

	+StartAnim ~AnimationFrames_fish , 10
	+DoFrame 107 , 108 , 109 , 110 , 111 , 112 , 113 , 114

	+StartAnim ~AnimationFrames_largeFood , 1
	+DoFrame 187

	+StartAnim ~AnimationFrames_smallFood , 1
	+DoFrame 186

	+StartAnim ~AnimationFrames_ghost , 10
	+DoFrame 222 , 223 , 224 , 225

	+StartAnim ~AnimationFrames_switchUp , 1
	+DoFrame 121

	+StartAnim ~AnimationFrames_switchDown , 1
	+DoFrame 120

	+StartAnim ~AnimationFrames_drip , 10
	+DoFrame 100 , 101 , 102 , 103 , 104 , 105 , 106


	+StartAnim ~AnimationFrames_bossBodyLeft	, 1
	+DoFrame 123
	+StartAnim ~AnimationFrames_bossBodyRight	, 1
	+DoFrame 126
	+StartAnim ~AnimationFrames_bossLegLeft		, 1
	+DoFrame 125
	+StartAnim ~AnimationFrames_bossLegRight	, 1
	+DoFrame 124
	+StartAnim ~AnimationFrames_bossHead		, 1
	+DoFrame 128
	+StartAnim ~AnimationFrames_bossRock		, 1
	+DoFrame 130


	; Must be the last macro to correctly terminate the last sequence
	+EndAnimLoop

kAnimation_maxActivationObjects = 64
!set kAnimation_currentActivationObject = 0

AnimationActivationObject_InitLo
* = * + kAnimation_maxActivationObjects
AnimationActivationObject_InitHi
* = * + kAnimation_maxActivationObjects
AnimationActivationObject_respawnTiming
* = * + kAnimation_maxActivationObjects
AnimationActivationObject_ExtData0
* = * + kAnimation_maxActivationObjects
AnimationActivationObject_ExtData1
* = * + kAnimation_maxActivationObjects

	; These are used in maps to give spawn variety
	+DoAnimationActivationObject ~AnimationObject_bat , AnimationInit_bat , 5 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_explosion , AnimationInit_explosion , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_practice , AnimationInit_practice , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_dragonBody , AnimationInit_dragonBody , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_dragonHead , AnimationInit_dragonHead , -1 , 0 , 0

	+DoAnimationActivationObject ~AnimationObject_chest , AnimationInit_chest , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_worm , AnimationInit_worm , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_fish , AnimationInit_fish , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_largeFood , AnimationInit_largeFood , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_smallFood , AnimationInit_smallFood , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_ghost , AnimationInit_ghost , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_spider , AnimationInit_spider , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_switchUp , AnimationInit_switchUp , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_drip , AnimationInit_drip , -1 , 0 , 0

	+DoAnimationActivationObject ~AnimationObject_bossBodyLeft  , AnimationInit_bossBodyLeft  , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_bossBodyRight	, AnimationInit_bossBodyRight , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_bossLegLeft	, AnimationInit_bossLegLeft	  , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_bossLegRight	, AnimationInit_bossLegRight  , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_bossHead		, AnimationInit_bossHead	  , -1 , 0 , 0
	+DoAnimationActivationObject ~AnimationObject_bossRock		, AnimationInit_bossRock	  , -1 , 0 , 0

Animation_CountEnemiesThatHomeInYPos !by 0
kAnimation_CountEnemiesThatHomeInYPos_Max = 6
AnimationInit_bat
	lda Animation_CountEnemiesThatHomeInYPos
	cmp #kAnimation_CountEnemiesThatHomeInYPos_Max
	bcs .error
	jsr Animation_FindFreeSlot
	bcs .error
	inc Animation_CountEnemiesThatHomeInYPos
	+MWordValueTo_AX AnimationFrames_Bat
	jsr Animation_ForceSet
	jsr AnimationCommonSetInitPosition
	; Interesting colour choice
	tya
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs AnimationTick_bat , AnimationDelete_bat

	; Health
	lda #3
	sta Animation_GeneralStorage0,y
	; Target pos offset
	lda #0
	sta Animation_GeneralStorage1,y
	sta Animation_GeneralStorage2,y

	clc
.error
	rts

AnimationDelete_bat
	; Handles screen edge removal, and also when it is killed
	dec Animation_CountEnemiesThatHomeInYPos
	rts

BulletScreenBankHi !by >CharEffects_HiddenIndexLookup
Animation_makeExplode
	txa
	pha
	tay
	+MWordValueTo_AX AnimationFrames_Explosion
	jsr Animation_ForceSet
	+MAnimation_SetFuncs 0 , 0
	pla
	tax
	rts

AnimationTick_bat
	+MSpritePosToCharacterLookup .rejectRoutine , AnimationXPosLo , AnimationXPosHi , AnimationYPos , BulletScreenBankHi , tempWork0 , tempWork1 , ZP_SpriteXPosToScreenCharPoslo , ZP_SpriteYPosToScreenCharPosLolo , ZP_SpriteYPosToScreenCharPosHilo
	lda (tempWork0),y
	bmi .rejectRoutine
	; The char effects index
	tay
	lda CharEffectsChar,y
	cmp #5
	beq .instantDeath1
	lda #-1
	sta CharEffectsTime,y	; Kill the char effect
	; Decrease bat health
	dec Animation_GeneralStorage0,x
	bpl .noExplode
.instantDeath1
	jsr AnimationDelete_bat
	jsr Animation_makeExplode
	+MWordValueTo_AX .scoreForBat
	jsr ScoreAdd
	rts
.scoreForBat
	!by 7 , 2 , 3, 4
.noExplode
	; Flash the sprite
	lda AnimationSpriteColour,x
	eor #$ff
	sta AnimationSpriteColour,x

.rejectRoutine

	lda #1
	sta tempWork2
	lda Animation_Index,x
	bne .notStartFrame
	jsr Rand
	and #31
	sec
	sbc #16
	sta Animation_GeneralStorage1,x
	jsr Rand
	and #31
	sec
	sbc #16
	sta Animation_GeneralStorage2,x
	lda Animation_Index,x
.notStartFrame
	cmp #20
	bcc .goSlow
	cmp #30
	bcc .goFast
	; Alternate between 1 and 2 for some frames
	and #1
	beq .goSlow
.goFast
	lda #2
	sta tempWork2
.goSlow
	lda AnimationXPosHi,x
	ror
	lda AnimationXPosLo,x
	ror
	clc
	adc Animation_GeneralStorage1,x
;	cmp #$f0
;	bcc .noAdjust1
;	lda #0
;.noAdjust1
	cmp PlayerXPosShifted
	beq .doY
	bcc .moveRight

;.moveLeft
	lda AnimationXPosLo,x
	sec
	sbc tempWork2
	sta AnimationXPosLo,x
	lda AnimationXPosHi,x
	sbc #0
	and #1
	sta AnimationXPosHi,x
	jmp .doY

.moveRight
	lda AnimationXPosLo,x
	clc
	adc tempWork2
	sta AnimationXPosLo,x
	lda AnimationXPosHi,x
	adc #0
	and #1
	sta AnimationXPosHi,x

.doY

	lda AnimationYPos,x
	sec
	sbc #4
	sbc Animation_GeneralStorage2,x
	cmp AnimationYPos+1
	beq .doRet
	bcs .moveUp
;.moveDown
	lda AnimationYPos,x
	clc
	adc tempWork2
	sta AnimationYPos,x
	rts
.moveUp
	lda AnimationYPos,x
	sec
	sbc tempWork2
	sta AnimationYPos,x
	rts

.doRet
	rts

AnimationInit_explosion
	jsr Animation_FindFreeSlot
	bcs .error2
	+MWordValueTo_AX AnimationFrames_Explosion
	jsr Animation_ForceSet
	jsr AnimationCommonSetInitPosition
	; Interesting colour choice
	tya
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs 0 , 0

	clc
.error2
	rts

!zn
AnimationDelete_commonMakeRespawn
	+MAnimation_MakeObjectRespawnFrom Animation_ActivationObjectIndex
	rts

!zn
AnimationInit_practice
	+MAnimation_StandardInit AnimationFrames_practice , VIC2Colour_White , 0 , AnimationDelete_commonMakeRespawn

AnimationTick_practice
	rts


AnimationTick_detectHitExplode
	+MSpritePosToCharacterLookup .rejectRoutine2 , AnimationXPosLo , AnimationXPosHi , AnimationYPos , BulletScreenBankHi , tempWork0 , tempWork1 , ZP_SpriteXPosToScreenCharPoslo , ZP_SpriteYPosToScreenCharPosLolo , ZP_SpriteYPosToScreenCharPosHilo
	lda (tempWork0),y
	bmi .rejectRoutine2
	; The char effects index
	tay
	lda #-1
	sta CharEffectsTime,y	; Kill the char effect
	; +MAnimation_StopObjectRespawnFrom is not really needed since the explosion will not restore the MapPlacement_spawnedFlag, so it stays dead *if* the object has a respawn time of -1. Which most objects do
	; However it is needed if the object has a respawn time. So to be safe set it here.
	+MAnimation_StopObjectRespawnFrom Animation_ActivationObjectIndex
	jsr Animation_makeExplode
	+MWordValueTo_AX .scoreForGeneric
	jsr ScoreAdd
	rts
.scoreForGeneric
	!by 6 , 1 , 3
.rejectRoutine2
	rts

AnimationInit_chest
	+MAnimation_StandardInit AnimationFrames_chest , VIC2Colour_Orange , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_worm
	+MAnimation_StandardInit AnimationFrames_worm , VIC2Colour_Red , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_fish
	+MAnimation_StandardInit AnimationFrames_fish , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_largeFood
	+MAnimation_StandardInit AnimationFrames_largeFood , VIC2Colour_Orange , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_smallFood
	+MAnimation_StandardInit AnimationFrames_smallFood , VIC2Colour_Brown , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_ghost
	+MAnimation_StandardInit AnimationFrames_ghost , VIC2Colour_White , AnimationTick_detectHitExplode , AnimationDelete_commonMakeRespawn
AnimationInit_spider
	+MAnimation_StandardInit AnimationFrames_spider , VIC2Colour_Green , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_switchUp
	+MAnimation_StandardInit AnimationFrames_switchUp , VIC2Colour_Red , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_drip
	+MAnimation_StandardInit AnimationFrames_drip , VIC2Colour_Cyan , 0 , AnimationDelete_commonMakeRespawn

AnimationInit_bossBodyLeft
	+MAnimation_StandardInit AnimationFrames_bossBodyLeft	 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_bossBodyRight
	+MAnimation_StandardInit AnimationFrames_bossBodyRight	 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_bossLegLeft
	+MAnimation_StandardInit AnimationFrames_bossLegLeft	 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_bossLegRight
	+MAnimation_StandardInit AnimationFrames_bossLegRight	 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_bossHead
	+MAnimation_StandardInit AnimationFrames_bossHead		 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn
AnimationInit_bossRock
	+MAnimation_StandardInit AnimationFrames_bossRock		 , VIC2Colour_Yellow , 0 , AnimationDelete_commonMakeRespawn


; This simple hack takes the last processed animation frame for the dragon head and uses it for the body animation
DragonAnimationFrame !by 0
!zn
AnimationInit_dragonBody
	jsr Animation_FindFreeSlot
	bcs .error

	+MAnimation_PreserveMapPlacementTo Animation_ActivationObjectIndex

	+MWordValueTo_AX AnimationFrames_DragonBody
	jsr Animation_ForceSet
	jsr AnimationCommonSetInitPosition
	lda #VIC2Colour_Green
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs AnimationTick_dragonBody , AnimationDelete_commonMakeRespawn

	clc
.error
	rts

!zn
AnimationTick_dragonBody
	lda DragonAnimationFrame
	sta Animation_Index,x
	rts


!zn
AnimationInit_dragonHead
	jsr Animation_FindFreeSlot
	bcs .error

	+MAnimation_PreserveMapPlacementTo Animation_ActivationObjectIndex

	+MWordValueTo_AX AnimationFrames_DragonHead
	jsr Animation_ForceSet
	jsr AnimationCommonSetInitPosition
	lda #VIC2Colour_Green
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs AnimationTick_dragonHead , AnimationDelete_commonMakeRespawn

	clc
.error
	rts

!zn
AnimationTick_dragonHead
	lda Animation_Index,x
	sta DragonAnimationFrame
	cmp #16
	bne .noFireball

	jsr Animation_FindFreeSlot
	bcs .noAllocateFireball
	stx .smX+1
	+MWordValueTo_AX AnimationFrames_fireball
	jsr Animation_ForceSet
.smX ldx #0
	lda AnimationXPosLo,x
	sta AnimationXPosLo,y
	lda AnimationXPosHi,x
	sta AnimationXPosHi,y
	lda AnimationYPos,x
	sta AnimationYPos,y

	; Interesting colour choice
	lda #VIC2Colour_Red
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs AnimationTick_fireball , 0

	; Health
	lda #3
	sta Animation_GeneralStorage0,y

.noAllocateFireball
.noFireball
	rts

!zn
AnimationTick_fireball
	lda AnimationXPosLo,x
	clc
	adc #2
	sta AnimationXPosLo,x
	lda AnimationXPosHi,x
	adc #0
	and #1
	sta AnimationXPosHi,x
	rts



!set kMapPlacement_currentIndex = 0
!align 255,0
MapPlacement_activationObject
	* = * + kMapPlacement_maxIndex
MapPlacement_spawnedFlag
	* = * + kMapPlacement_maxIndex
MapPlacement_posXLo
	* = * + kMapPlacement_maxIndex
MapPlacement_posXHi
	* = * + kMapPlacement_maxIndex
MapPlacement_posYLo
	* = * + kMapPlacement_maxIndex
MapPlacement_posYHi
	* = * + kMapPlacement_maxIndex

!source "exported assets/Level1-2.a"
