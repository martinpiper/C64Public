!zn
AnimationInit_bossBodyLeft
	+MAnimation_StandardInit AnimationFrames_bossBodyLeft	 , VIC2Colour_LightBlue , AnimationTick_bossBodyLeft , AnimationDelete_commonMakeRespawn
AnimationInit_bossBodyRight
	+MAnimation_StandardInit AnimationFrames_bossBodyRight	 , VIC2Colour_Blue , AnimationTick_bossBodyRight , AnimationDelete_commonMakeRespawn
AnimationInit_bossLegLeft
	+MAnimation_StandardInit AnimationFrames_bossLegLeft	 , VIC2Colour_LightRed , AnimationTick_bossLegLeft , AnimationDelete_commonMakeRespawn
AnimationInit_bossLegRight
	+MAnimation_StandardInit AnimationFrames_bossLegRight	 , VIC2Colour_Red , AnimationTick_bossLegRight , AnimationDelete_commonMakeRespawn
AnimationInit_bossHead
	+MAnimation_StandardInit AnimationFrames_bossHead		 , VIC2Colour_Green , AnimationTick_bossHead , AnimationDelete_bossHead
AnimationInit_bossRock
	+MAnimation_StandardInit AnimationFrames_bossRock		 , VIC2Colour_Brown , AnimationTick_bossRock , 0


BossAnimationIndex !by -1
.bossJumpTabIndex !by 0
.bossJumpTab !by 0
	!by -4 , -4 , -4 , -4 , -4 , -3 , -3 , -3 , -3 , -2
	!by -2 , -2 , -2 , -2 , -2 , -1 , -1 , -1 , -1 , -1
	!by -1 , -1 ,  0 , -1 , -1 ,  0 , -1 ,  0 ,  0 ,  0
	!by  1 ,  0 ,  0 ,  1 ,  0 ,  0 ,  1 ,  1 ,  0 ,  0

	!by  1 ,  1 ,  1 ,  1 ,  1 ,  2 ,  1 ,  2 ,  2 ,  2
	!by  2 ,  2 ,  3 ,  3 ,  3 ,  4 ,  4 ,  4 ,  4 ,  4
	!by  3 , -2 , -2 , -2 , -1 , -1 , -1 ,  0 , -1 ,  0
	!by  0 ,  1 ,  0 ,  1 ,  1 ,  1 ,  2 ,  2 ,  2 ,  2
.bossJumpTabLen = * - .bossJumpTab
.bossJumpPosY !by 0

.bossThrowRockTimer !by 137
.bossExplode !by 0
.bossHealth !by 0 ; 30
.bossRockIntroCount !by 15
.bossRockIntroDelay !by 0

AnimationTick_bossHead
	stx BossAnimationIndex	; Could be put inside the init, but we use the +MAnimation_StandardInit
	stx Animation_UpdatePriorityTickX
	+MWordValueToAddress_A AnimationTick_bossHeadPriorityTick , Animation_UpdatePriorityTick

	lda Camera_SeekToTarget
	bne .alreadySeeking

	lda Common_MusicSFXConfig
	cmp #kCommon_MusicSFXConfig_SFX
	beq .wantSFX

	lda #1
	jsr SFXInitMusic

.wantSFX
.alreadySeeking

	lda #15
	sta Camera_SeekToTarget_MapHX
	lda #16
	sta Camera_SeekToTarget_MapHY
	lda #1
	sta Camera_SeekToTarget

	; Throw some rocks at the start of the boss
	lda .bossRockIntroCount
	bmi .noBossIntroThrow
	dec .bossRockIntroDelay
	bpl .noBossIntroThrow

	dec .bossRockIntroCount
	lda #20
	sta .bossRockIntroDelay

	; Throw rock with better random position
	jsr .doRockThrow

	jsr Rand
	and #63
	adc #32
	sta AnimationXPosLo,y
	lda #0
	sta AnimationXPosHi,y

	jsr Rand
	and #31
	adc #48
	sta AnimationYPos,y

.noBossIntroThrow

	; Only throw rocks if the player is below this point
	lda AnimationYPos
	cmp #128
	bcc .noRockThrowTest

	dec .bossThrowRockTimer
	+lbeq .doRockThrow

.noRockThrowTest
	+MAnimation_CalculateShifted_X
	+MAnimation_DetectBoundingBoxCollisionWithIndexShifted .isHit , 2 ,	10 , 20 , 10 , 20
	+MSpritePosToCharacterLookupShifted .rejectRoutineBossHead , AnimationXPosShifted , AnimationYPos , BulletScreenBankHi , tempWork0 , tempWork1 , ZP_SpriteXPosToScreenCharPoslo , ZP_SpriteYPosToScreenCharPosLolo , ZP_SpriteYPosToScreenCharPosHilo
	lda (tempWork0),y
	bpl .hitRoutineBossHead
	tya
	clc
	adc #VIC2ScreenCharsWidth
	tay
	lda (tempWork0),y
	bpl .hitRoutineBossHead

	jmp .rejectRoutineBossHead

.hitRoutineBossHead
	; The char effects index
	tay
	lda #-1
	sta CharEffectsTime,y	; Kill the char effect
.isHit
	; Decrease boss health
	dec .bossHealth
	bpl .noExplodeBossHead

	lda #-1
	sta BossAnimationIndex	; Could be put inside the init, but we use the +MAnimation_StandardInit
	lda #0
	sta .bossJumpTabIndex
	+MWordValueToAddress_A Animation_UpdatePriorityTickDefault , Animation_UpdatePriorityTick
	lda #0
	sta Camera_SeekToTarget

	inc .bossExplode
	jsr Animation_makeExplode

	+MWordValueTo_AX .scoreForBoss
	jsr ScoreAdd

.rejectRoutineBossHead
	rts

.scoreForBoss
	+MScoreData 7 , 3 , 4 , 2 , 5

.noExplodeBossHead
	jsr Animation_FlashTheSprite

	lda #2
	jsr SFXInit
	rts

.doRockThrow
	jsr Rand
	and #63
	clc
	adc #50
	sta .bossThrowRockTimer
	jsr Animation_FindFreeSlot
	bcs .noAllocateRock
	stx .smX2+1
	+MWordValueTo_AX AnimationFrames_bossRock
	jsr Animation_ForceSet
.smX2 ldx #0
	lda AnimationXPosLo,x
	sta AnimationXPosLo,y
	lda AnimationXPosHi,x
	sta AnimationXPosHi,y
	lda AnimationYPos,x
	sec
	sbc #VIC2SpriteSizeY
	sta AnimationYPos,y

	lda #VIC2Colour_LightRed
	sta AnimationSpriteColour,y

	+MAnimation_SetFuncs AnimationTick_bossRock , 0

.noAllocateRock
	rts


AnimationTick_bossHeadPriorityTick
	ldy .bossJumpTabIndex
	bne .someJumpTab
.endBossJump
	lda AnimationYPos,x
	sta .bossJumpPosY
	rts
.someJumpTab
	cpy #.bossJumpTabLen
	bcs .endBossJump

	lda AnimationYPos,x
	clc
	adc .bossJumpTab-1,y
	sta AnimationYPos,x
	sta .bossJumpPosY

	rts

; For safety, if the boss scrolls off screen
AnimationDelete_bossHead
	lda #-1
	sta BossAnimationIndex	; Could be put inside the init, but we use the +MAnimation_StandardInit
	lda #0
	sta .bossJumpTabIndex
	+MWordValueToAddress_A Animation_UpdatePriorityTickDefault , Animation_UpdatePriorityTick
	jmp AnimationDelete_commonMakeRespawn



AnimationTick_bossRock
	lda .bossExplode
	beq .noBossExplode1
	jmp Animation_makeExplode
.noBossExplode1

	lda AnimationXPosLo,x
	clc
	adc #2
	sta AnimationXPosLo,x
	bcc .noMSBX1
	inc AnimationXPosHi,x
.noMSBX1
	+MSpritePosToCharacterLookupPosTweak 0 , 5-8 , .rejectRoutineRock , AnimationXPosLo , AnimationXPosHi , AnimationYPos , ScrollerBankVisible , tempWork0 , tempWork1 , ZP_SpriteXPosToScreenCharPoslo , ZP_SpriteYPosToScreenCharPosLolo , ZP_SpriteYPosToScreenCharPosHilo
	lda (tempWork0),y
	+lbmi Animation_makeExplode
	; Underneath
	tya
	clc
	adc #VIC2ScreenCharsWidth
	tay
	lda (tempWork0),y
	bpl .rockCanFall
.rejectRoutineRock
	rts
.rockCanFall
	lda AnimationYPos,x
	clc
	adc #2
	sta AnimationYPos,x
	rts



; This body part controls the animation frames for the rest of the boss
BossAnimationFrame !by 0
AnimationTick_bossBodyLeft
	lda .bossExplode
	beq .noBossExplode2
	jmp Animation_makeExplode
.noBossExplode2

	lda BossAnimationIndex
	bmi .noBossAnimYet

	lda .bossJumpPosY
	clc
	adc #VIC2SpriteSizeY
	sta AnimationYPos,x


	lda Animation_Index,x
	sta BossAnimationFrame
	cmp #100
	bcs .someJump
	lda #0
	sta .bossJumpTabIndex
	rts
.someJump
	sec
	sbc #100
	sta .bossJumpTabIndex
	rts
.noBossAnimYet
	lda #0
	sta Animation_Index,x
	sta BossAnimationFrame
	sta .bossJumpTabIndex
	rts

AnimationTick_bossBodyRight
	lda .bossExplode
	beq .noBossExplode5
	jmp Animation_makeExplode
.noBossExplode5

	lda BossAnimationFrame
	sta Animation_Index,x

	lda BossAnimationIndex
	bpl .gotBossAnim1
	rts
.gotBossAnim1
	lda .bossJumpPosY
	clc
	adc #VIC2SpriteSizeY
	sta AnimationYPos,x
	rts

AnimationTick_bossLegLeft
	lda .bossExplode
	beq .noBossExplode3
	jmp Animation_makeExplode
.noBossExplode3

	lda BossAnimationFrame
	sta Animation_Index,x

	lda BossAnimationIndex
	bpl .gotBossAnim2
	rts
.gotBossAnim2
	lda .bossJumpPosY
	clc
	adc #VIC2SpriteSizeY*2
	sta AnimationYPos,x
	rts

AnimationTick_bossLegRight
	lda .bossExplode
	beq .noBossExplode4
	jmp Animation_makeExplode
.noBossExplode4

	lda BossAnimationFrame
	sta Animation_Index,x

	lda BossAnimationIndex
	bpl .gotBossAnim3
	rts
.gotBossAnim3
	lda .bossJumpPosY
	clc
	adc #VIC2SpriteSizeY*2
	sta AnimationYPos,x
	rts
