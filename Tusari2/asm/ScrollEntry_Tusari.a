!source "stdlib\Comparisons.a"

; Must be a power of two in size
kMapPlacement_maxIndex = 256

Multiplex_items	= 24

;Multiplex_DefaultPatternYPosTweak = 114	; Places all eight sprites over the split
;Scroller_DebugSplit = 1

Scroller_UseKernal = 1
UseAnimationInit = 1
UseAnimationInit2 = 1

Scroller_EnableSpeedCode = 1
!source "_f_index1.a"

Scroller_EnableBlockStripsSpeedCode = 1
Scroller_EnableBlockColourSpeedCode = 1
Scroller_EnableScrollSpritesSpeedCode = 1

; Enable NMI code for colour splits
Scroller_EnableUpdateTopIRQHook = 1
Scroller_EnableIrqTopOfScreenHook = 1
Scroller_EnableNMI1Hook = 1

;!source "ScrollerOptimisations.a"
!source "ScrollerOptimisationsAggressive.a"

; Defines some aggressive multiplexor updates
Scroller_DiscardMinSpriteYPos = VIC2SpriteYBorderTop - VIC2SpriteSizeY
; Unfortunately Multiplex_DiscardSpritesYPos is calculated by the IRQ setup code, so we need Scroller_DiscardForMultiplexorBottomDefined
Scroller_DiscardForMultiplexorBottomDefined = 1
Scroller_DiscardForMultiplexorBottom = Multiplex_DiscardSpritesYPosForSort
Scroller_DiscardForMultiplexorRight = VIC2SpriteXBorderRight38

!source "ScrollerVars.a"
Multiplex_VarBase	= scrollerDemo_endVars
Multiplex_spritepointer	= $cbf8
;Multiplex_MaintainPriority	= 1
;Multiplex_ReverseOrder = 1

;Multiplex_SplitSort = 1
!source "../SpriteMultiplexor/SpriteMultiplexorVars.a"
!ifdef Multiplex_SplitSort {
MultiplexSort_YPos = AnimationYPosToSort
}

Multiplex_EnableEarlyOut = 1
Multiplex_OverflowRasterCheck1 = 1
Multiplex_OverflowRasterCheck2 = 1
Multiplex_BunchingCheck = 1

DisableUpdateMultiplexorToAnimation = 1

;Tusari2_DebugMainlineBorder=1
;Multiplexor_DebugBorder = 1
;Scroller_DebugIRQBorder = 1
;Scroller_DebugIRQBorderSound = 1
;Scroller_DebugMainlineBorderForIRQ = 1
;Scroller_DebugNMIBorder = 1
;Scroller_DebugMainlineBorder = 1
;Scroller_DebugSoundTimings = 1
;Scroller_DebugColourScrollTimings = 1
;Scroller_DebugScreenScrollTimings = 1
;Scroller_DebugParalaxScrollTimings = 1
;CharEffects_DebugBorder = 1

Scroller_MultiDirection = 1

Scroller_ScanForSpace = 1

;Scroller_FullScreen = 1

Scroller_MaxScrollSpeed = 4

IrqTopOfScreenPos = 16
!ifdef Scroller_FullScreen {
;IRQOpenBorders = 1
} else {
; PAL
Scroller_AdditionalCharLines = 2
; NTSC
;Scroller_AdditionalCharLines = 0
}
Scroller_AdditionalCharLinesBankAdjust=3
; PAL
TusariCyclesPerRaster = CyclesPerRasterPALC64
; NTSC
;TusariCyclesPerRaster = CyclesPerRasterNTSCC64

Scroller_UseDemoScorePanel = 1
Scroller_UseDemoScorePanelStaticMemory = 1
Scroller_NeedFullColourScroll = 1

Scroller_DisableUpdateSprites = 1
Scroller_SpriteNegativeColourEqualsFlashingColour = VIC2Colour_White
DisableUpdateMultiplexorToAnimationCode = 1
Scroller_HookInclude = 1
ScrollerDemoMainline_ExitHook = 1

Animation_ActiveNonZeroEnabled = 1
Animation_ActiveNonZero = Animation_FramesHi


Scroller_ColourScrollRasterAbortLevel = $80
Scroller_ColourScrollRasterAbortLevelFrame = 1

Scroller_PlaySoundEffectsDuringGame = 1

kNumCharEffects = 20
CharEffects_HiddenIndexLookupEnabled = 1
CharEffects_CoordinateShiftX = 1
CharEffects_CoordinateShiftY = 1
;CharEffects_EnableBeforeScrollersSpeedCode = 1
;CharEffects_EnableAfterScrollersSpeedCode = 1
;CharEffects_EnableAfterScrollersSpeedCode2 = 1

;Scroller_DoMusicUpdateInIRQ = 1
Scroller_CountMusicUpdateInIRQ = 1

; Not enabled in Tusari2 to make the tests simpler: MapSolidCharsLower = 16
MapSolidCharsUpper = 128

EnableBeforeScrollersHook = 1
EnableAfterScrollersHook = 1
RedirectHandleUserInput = 1

Scroller_MultiDirection_RunPreFrame = 1

CharColoursForEveryCharacter = 1


; Define this as a value to clear the screen to a specific colour before bank 0 and game screen are cleared
!ifndef Scroller_NeedFullColourScroll {
!ifndef CharColoursForEveryCharacter {
!ifndef BlockColoursForEveryCharacter {
Scroller_ClearColour = 9
}
}
}



Tusari2_ZP_base = Multiplex_endVars
!source "Tusari2Vars.a"
